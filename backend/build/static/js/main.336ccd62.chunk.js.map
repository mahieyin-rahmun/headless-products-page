{"version":3,"sources":["routes.js","store/actions/uiActions.js","store/actions/types/uiActionTypes.js","components/partials/NavigationBar.js","store/actions/authActions.js","store/actions/types/authActionTypes.js","components/partials/FavoritesButton.js","components/partials/ShoppingCartButton.js","store/actions/cartActions.js","store/actions/types/cartActionTypes.js","components/partials/Product.js","store/actions/productsActions.js","store/actions/types/productsActionTypes.js","components/partials/Products.js","components/partials/CartProduct.js","components/partials/Cart.js","components/partials/AlertMessage.js","components/pages/ProductsPage.js","components/pages/LoginPage.js","components/pages/OrderPage.js","components/pages/SignupPage.js","components/pages/404Page.js","components/hoc/isAuthenticated.js","components/hoc/isNotAuthenticated.js","App.js","serviceWorker.js","store/reducers/productsReducer.js","store/reducers/uiReducer.js","store/reducers/cartReducer.js","store/reducers/authReducer.js","store/store.js","index.js"],"names":["clientRoutes","backendRoutes","fetchProductsFailed","errorMessage","dispatch","type","payload","fetchFavoriteProductsFailed","loginError","signupError","addToFavoriteProductsFailed","removeFromFavoriteProductsFailed","NavigationBar","Fragment","Navbar","bg","sticky","style","background","expand","Brand","Toggle","aria-controls","Collapse","id","this","props","isUserAuthenticated","Nav","className","Link","href","onClick","logout","Component","connect","state","auth","window","localStorage","removeItem","FavoritesButton","Button","variant","borderRadius","borderColor","position","top","right","icon","ShoppingCartButton","disabled","removeFromCart","productID","Product","getQuantityText","quantityType","addToCart","event","toggleProductIsFavorited","isProductFavorited","removeFromFavorites","addToFavorites","shouldAddToCartButtonBeDisabled","cart","findIndex","product","favoritesList","Card","width","margin","Img","src","productImage","bind","Body","Title","productName","Text","price","cartProducts","products","getState","productsList","filter","userToken","axios","post","headers","Authorization","then","response","data","messageType","messageBody","catch","err","Products","fetchProducts","getFavoriteProducts","map","key","name","imageURL","isVerifyingToken","ui","get","productIDs","CartProduct","onClickRemoveFromCart","handleUpdateQuantityClick","target","updateQuantity","alt","height","display","marginRight","fontSize","marginTop","wordWrap","Form","Group","Control","size","value","quantity","readOnly","marginLeft","Cart","placeOrder","length","history","push","clearCart","forEach","grandTotalPrice","cartProduct","Header","cursor","float","bottom","left","toFixed","compose","withRouter","AlertMessage","Alert","useSpinner","Spinner","animation","role","message","ProductsPage","isWorking","LoginPage","onGoogleLoginClick","open","onLoginClick","preventDefault","email","password","loginLocal","onHandleTextFieldChange","setState","match","params","messagesArray","split","token","loginOauthSuccess","loginErrorState","error","textAlign","controlId","Label","onChange","placeholder","login","setItem","OrderPage","totalPrice","to","Table","striped","bordered","hover","index","parseFloat","fontWeight","colSpan","SignupPage","onSignupClick","username","test","signupLocal","signupErrorState","signup","ErrorPage","WrappedComponent","library","add","fas","far","fab","faGoogle","faSolidHeart","faRegularHeart","faShoppingCart","faBan","faArrowAltCircleLeft","faTrashAlt","App","Container","exact","path","component","isNotAuthenticated","isAuthenticated","Boolean","location","hostname","initialState","productsReducer","action","fetchFavoriteProducts","uiReducer","cartReducer","item","concat","productIndex","newQuantity","slice","authReducer","rootReducer","combineReducers","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getItem","status","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.336ccd62.chunk.js","sourcesContent":["// ccontains client and backend route definitions\r\n\r\nexport const clientRoutes = {\r\n  LOGIN_ROUTE: \"/login\",\r\n  LOGIN_SUCCESS_ROUTE: \"/login/failed/:data\",\r\n  LOGIN_FAILURE_ROUTE: \"/login/success/:data\",\r\n  SIGNUP_ROUTE: \"/signup\",\r\n  ORDER_ROUTE: \"/order\",\r\n  PRODUCTS_ROUTE: \"/\"\r\n};\r\n\r\n\r\nexport const backendRoutes = {\r\n  GOOGLE_OAUTH_LOGIN: \"/api/v1/auth/google/login\",\r\n  TOKEN_VERIFY: \"/api/v1/auth/verify\",\r\n  LOCAL_LOGIN: \"/api/v1/auth/local/login\",\r\n  LOCAL_SIGNUP: \"/api/v1/auth/local/signup\",\r\n  FETCH_PRODUCTS: \"/api/v1/products\",\r\n  PRODUCT_FAVORITES: \"/api/v1/products/favorite\",\r\n  UNFAVORITE_PRODUCT: \"/api/v1/products/unfavorite\"  \r\n};","import { \r\n  FETCH_PRODUCTS_SUCCESS, \r\n  FETCH_PRODUCTS_FAIL, \r\n  CLEAR_ERRORS, \r\n  TOGGLE_VERIFYING_TOKEN,\r\n  LOGIN_ERROR,\r\n  SIGNUP_ERROR,\r\n  FETCH_FAVORITE_PRODUCTS_FAILED,\r\n  FETCH_FAVORITE_PRODUCTS_SUCCESS, \r\n  ADD_TO_FAVORITES_FAILED,\r\n  ADD_TO_FAVORITES_SUCCESS,\r\n  REMOVE_FROM_FAVORITES_FAILED,\r\n  REMOVE_FROM_FAVORITES_SUCCESS,\r\n  TOGGLE_IS_WORKING\r\n} from './types/uiActionTypes';\r\n\r\n\r\nexport const toggleIsWorking = () => (dispatch) => {\r\n  return dispatch({\r\n    type: TOGGLE_IS_WORKING\r\n  });\r\n}\r\n\r\nexport const fetchProductsFailed = (errorMessage) => (dispatch) => {\r\n  return dispatch({\r\n    type: FETCH_PRODUCTS_FAIL,\r\n    payload: errorMessage\r\n  });\r\n};\r\n\r\n\r\nexport const fetchProductsSucceeded = () => (dispatch) => {\r\n  return dispatch({\r\n    type: FETCH_PRODUCTS_SUCCESS\r\n  });\r\n};\r\n\r\n\r\nexport const fetchFavoriteProductsFailed = (errorMessage) => (dispatch) => {\r\n  return dispatch({\r\n    type: FETCH_FAVORITE_PRODUCTS_FAILED,\r\n    payload: errorMessage\r\n  });\r\n}\r\n\r\nexport const fetchFavoriteProductsSucceeded = () => (dispatch) => {\r\n  return dispatch({\r\n    type: FETCH_FAVORITE_PRODUCTS_SUCCESS\r\n  }); \r\n}\r\n\r\n\r\nexport const clearErrors = () => (dispatch) => {\r\n  return dispatch({\r\n    type: CLEAR_ERRORS\r\n  });\r\n};\r\n\r\nexport const toggleVerifyingToken = () => (dispatch) => {\r\n  return dispatch({\r\n    type: TOGGLE_VERIFYING_TOKEN\r\n  });\r\n}\r\n\r\n\r\nexport const loginError = (errorMessage) => (dispatch) => {\r\n  return dispatch({\r\n    type: LOGIN_ERROR,\r\n    payload: errorMessage\r\n  });\r\n};\r\n\r\n\r\nexport const signupError = (errorMessage) => (dispatch) => {\r\n  return dispatch({\r\n    type: SIGNUP_ERROR,\r\n    payload: errorMessage\r\n  });\r\n};\r\n\r\n\r\nexport const addToFavoriteProductsFailed = (errorMessage) => (dispatch) => {\r\n  return dispatch({\r\n    type: ADD_TO_FAVORITES_FAILED,\r\n    payload: errorMessage\r\n  })\r\n};\r\n\r\nexport const addToFavoriteProductsSuccess = () => (dispatch) => {\r\n  return dispatch({\r\n    type: ADD_TO_FAVORITES_SUCCESS\r\n  });\r\n}\r\n  \r\nexport const removeFromFavoriteProductsSuccess = () => (dispatch) => {\r\n  return dispatch({\r\n    type: REMOVE_FROM_FAVORITES_SUCCESS\r\n  });\r\n}\r\n\r\nexport const removeFromFavoriteProductsFailed = (errorMessage) => (dispatch) => {\r\n  return dispatch({\r\n    type: REMOVE_FROM_FAVORITES_FAILED,\r\n    payload: errorMessage\r\n  })\r\n};","export const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n\r\nexport const FETCH_PRODUCTS_SUCCESS = \"FETCH_PRODUCTS_SUCCESS\";\r\nexport const FETCH_PRODUCTS_FAIL = \"FETCH_PRODUCTS_FAIL\";\r\n\r\nexport const FETCH_FAVORITE_PRODUCTS_SUCCESS = \"FETCH_FAVORITE_PRODUCTS_SUCCESS\";\r\nexport const FETCH_FAVORITE_PRODUCTS_FAILED = \"FETCH_FAVORITE_PRODUCTS_FAILED\";\r\n\r\nexport const ADD_TO_FAVORITES_SUCCESS = \"ADD_TO_FAVORITES_SUCCESS\";\r\nexport const ADD_TO_FAVORITES_FAILED = \"ADD_TO_FAVORITES_FAILED\";\r\n\r\nexport const REMOVE_FROM_FAVORITES_SUCCESS = \"REMOVE_FROM_FAVORITES_SUCCESS\";\r\nexport const REMOVE_FROM_FAVORITES_FAILED = \"REMOVE_FROM_FAVORITES_FAILED\";\r\n\r\nexport const TOGGLE_VERIFYING_TOKEN = \"TOGGLE_VERIFYING_TOKEN\";\r\n\r\nexport const TOGGLE_IS_WORKING = \"TOGGLE_IS_WORKING\";\r\n\r\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\r\nexport const SIGNUP_ERROR = \"SIGNUP_ERROR\";\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport { logout } from \"../../store/actions/authActions\";\r\nimport { clientRoutes } from '../../routes';\r\n\r\nclass NavigationBar extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar bg=\"orange\" sticky=\"top\" style={{ background: \"orange\" }} expand=\"lg\">\r\n          <Navbar.Brand>Headless Products Page</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            {\r\n              this.props.isUserAuthenticated ?\r\n                \"\" : (\r\n                  <Nav className=\"mr-auto\">\r\n                    <Nav.Link href={clientRoutes.LOGIN_ROUTE}>Login</Nav.Link>\r\n                    <Nav.Link href={clientRoutes.SIGNUP_ROUTE}>Signup</Nav.Link>\r\n                  </Nav>\r\n                )\r\n            }\r\n            <Nav className=\"ml-auto\">\r\n              {\r\n                this.props.isUserAuthenticated ?\r\n                  <Nav.Link onClick={() => this.props.logout()}>Logout</Nav.Link> : \"\"\r\n              }\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  isUserAuthenticated: state.auth.isUserAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(NavigationBar);\r\n","import {LOGIN_SUCCESS, LOGIN_FAILED, SIGNUP_FAILED, LOGOUT} from \"./types/authActionTypes\";\r\nimport { toggleVerifyingToken, loginError, toggleIsWorking, clearErrors, signupError } from \"./uiActions\";\r\nimport axios from \"axios\";\r\nimport { backendRoutes } from \"../../routes\";\r\n\r\nexport const verifyLogin = () => (dispatch) => {\r\n\tdispatch(toggleVerifyingToken());\r\n\r\n\tconst token = window.localStorage.getItem(\"userToken\");\r\n\r\n\tif (!token) {\r\n\t\tdispatch({\r\n      type: LOGIN_FAILED,\r\n    });\r\n\r\n    dispatch(loginError(null));\r\n\t\treturn dispatch(toggleVerifyingToken());\r\n\t}\r\n\r\n  axios.get(backendRoutes.TOKEN_VERIFY, \r\n    { \r\n      headers: {\r\n        Authorization: \"Bearer \" + token\r\n      } \r\n    }\r\n  )\r\n\t.then(response => {    \r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: token\r\n    });\r\n    return dispatch(toggleVerifyingToken());\r\n  })\r\n\t.catch(err => {\r\n\t\tif (err.response.status === 401) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: LOGIN_FAILED,\r\n\t\t\t});\r\n\r\n\t\t\tdispatch(loginError(null));\r\n\t\t\treturn dispatch(toggleVerifyingToken());\r\n\t\t}\r\n\r\n\t\tdispatch(loginError(\"Unknown error when communicating with the server.\"));\r\n\t\treturn dispatch(toggleVerifyingToken());\r\n\t});\r\n};\r\n\r\nexport const loginLocal = (email, password) => (dispatch) => {\r\n\tdispatch(toggleIsWorking());\r\n\t\r\n\taxios.post(backendRoutes.LOCAL_LOGIN, { email, password })\r\n\t\t.then(response => {\r\n\t\t\tconst { data } = response;\r\n\t\t\tconst { token } = data;\r\n\r\n\t\t\twindow.localStorage.setItem(\"userToken\", token);\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: LOGIN_SUCCESS,\r\n\t\t\t\tpayload: token\r\n\t\t\t});\r\n\r\n\t\t\treturn dispatch(toggleIsWorking());\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconst { messageType, messageBody } = err.response.data;\r\n\r\n\t\t\tif (messageType === \"error\") {\r\n\t\t\t\tdispatch(loginError(messageBody));\r\n\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: LOGIN_FAILED\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn dispatch(toggleIsWorking());\r\n\t\t\t}\r\n\r\n\t\t\tdispatch(loginError(\"Unknown error when communicating with the server.\"));\r\n\t\t\treturn dispatch(toggleIsWorking());\r\n\t\t});\r\n};\r\n\r\nexport const loginOauthSuccess = (token) => (dispatch) => {\r\n\twindow.localStorage.setItem(\"userToken\", token);\r\n\r\n\treturn dispatch({\r\n\t\ttype: LOGIN_SUCCESS,\r\n\t\tpayload: token\r\n\t});\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n\twindow.localStorage.removeItem(\"userToken\");\r\n\t\r\n\tdispatch({\r\n\t\ttype: LOGOUT\r\n\t});\r\n\r\n\treturn dispatch(clearErrors());\r\n};\r\n\r\n\r\nexport const signupLocal = (username, email, password) => (dispatch) => {\r\n\tdispatch(toggleIsWorking());\r\n\r\n\taxios.post(backendRoutes.LOCAL_SIGNUP, { username, email, password })\r\n\t\t.then(response => {\r\n\t\t\tconst { data } = response;\r\n\t\t\tconst { token } = data;\r\n\r\n\t\t\twindow.localStorage.setItem(\"userToken\", token);\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: LOGIN_SUCCESS,\r\n\t\t\t\tpayload: token\r\n\t\t\t});\r\n\r\n\t\t\treturn dispatch(toggleIsWorking());\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconst { messageType, messageBody } = err.response.data;\r\n\r\n\t\t\tif (messageType === \"error\") {\r\n\t\t\t\tdispatch(signupError(messageBody));\r\n\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: SIGNUP_FAILED\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn dispatch(toggleIsWorking());\r\n\t\t\t}\r\n\r\n\t\t\tdispatch(signupError(\"Unknown error when communicating with the server.\"));\r\n\t\t\treturn dispatch(toggleIsWorking());\r\n\t\t})\r\n}\r\n","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILED = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const SIGNUP_FAILED = \"SIGNUP_FAIL\";","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst FavoritesButton = (props) => {\r\n  return (\r\n    <Button\r\n      variant=\"primary\"\r\n      className=\"float-right\"\r\n      style={{\r\n        borderRadius: \"50%\",\r\n        background: \"orange\",\r\n        borderColor: \"orange\",\r\n        position: \"absolute\",\r\n        top: \"1rem\",\r\n        right: \"1rem\"\r\n      }}\r\n      onClick={props.onClick}\r\n    >\r\n      <FontAwesomeIcon icon={props.icon} />\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default FavoritesButton;","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst ShoppingCartButton = (props) => {\r\n  return (\r\n    <Button\r\n      variant=\"primary\"\r\n      className=\"float-right\"\r\n      style={{\r\n        borderRadius: \"50%\",\r\n        background: \"orange\",\r\n        borderColor: \"orange\"\r\n      }}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      <FontAwesomeIcon icon={[\"fas\", \"shopping-cart\"]} />\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default ShoppingCartButton;","import { ADD_TO_CART, REMOVE_FROM_CART, UPDATE_QUANTITY } from './types/cartActionTypes';\r\n\r\n\r\nexport const addToCart = (productID) => (dispatch, getState) => {\r\n  const { products } = getState();\r\n  const { productsList } = products;\r\n\r\n  const productInfo = productsList.filter(product => product.productID === productID)[0];\r\n  \r\n  return dispatch({\r\n    type: ADD_TO_CART,\r\n    payload: productInfo\r\n  });\r\n}\r\n\r\nexport const removeFromCart = (productID) => (dispatch) => {\r\n  return dispatch({\r\n    type: REMOVE_FROM_CART,\r\n    payload: productID\r\n  });\r\n};\r\n\r\n\r\nexport const updateQuantity = (quantity, productID) => (dispatch) => {\r\n  return dispatch({\r\n    type: UPDATE_QUANTITY,\r\n    payload: {\r\n      quantity,\r\n      productID\r\n    }\r\n  });\r\n}","export const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const UPDATE_QUANTITY = \"UPDATE_QUANTITY\";","import React, { Component } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FavoritesButton from \"../partials/FavoritesButton\";\r\nimport ShoppingCartButton from \"../partials/ShoppingCartButton\";\r\nimport { addToCart } from '../../store/actions/cartActions';\r\nimport { addToFavorites, removeFromFavorites } from '../../store/actions/productsActions';\r\n\r\n\r\nclass Product extends Component {\r\n  getQuantityText = (quantityType) => {\r\n    switch (quantityType) {\r\n      case \"weight\":\r\n        return \"1 kg\"\r\n      \r\n      case \"piece\":\r\n        return \"1 pc\"\r\n      \r\n      case \"dozen\":\r\n        return \"1 dozen\"\r\n      \r\n      default:\r\n        return \"1 kg\"\r\n    }\r\n  }\r\n\r\n  addToCart = (productID, event) => {\r\n    this.props.addToCart(productID);\r\n  }\r\n\r\n  toggleProductIsFavorited = (productID, isProductFavorited, event) => {\r\n    if (isProductFavorited) {\r\n      this.props.removeFromFavorites(productID);\r\n    } else {\r\n      this.props.addToFavorites(productID);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let shouldAddToCartButtonBeDisabled = false;\r\n    let isProductFavorited = false;\r\n    // if the product has loaded in the DOM and the cart has been fetched from the store\r\n    if (this.props.productID && this.props.cart) {\r\n      shouldAddToCartButtonBeDisabled = !(this.props.cart.findIndex(product => product.productID === this.props.productID) === -1);\r\n    }\r\n\r\n    if (this.props.favoritesList) {\r\n      isProductFavorited = !(this.props.favoritesList.findIndex(productID => productID === this.props.productID) === -1);\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card style={{ width: '15rem', margin: \"1rem\" }}>\r\n          <Card.Img variant=\"top\" src={this.props.productImage} />\r\n          {\r\n            isProductFavorited ? (\r\n              <FavoritesButton\r\n                onClick={this.toggleProductIsFavorited.bind(this, this.props.productID, isProductFavorited)}\r\n                icon={[\"fas\", \"heart\"]}\r\n              />\r\n              \r\n            ) :\r\n            <FavoritesButton\r\n              onClick={this.toggleProductIsFavorited.bind(this, this.props.productID, isProductFavorited)}\r\n              icon={[\"far\", \"heart\"]}  \r\n            />\r\n          }\r\n          <Card.Body>\r\n            <Card.Title>{this.props.productName}</Card.Title>\r\n            <Card.Text>\r\n              Quantity: {this.getQuantityText(this.props.quantityType)}\r\n            </Card.Text>\r\n            <Card.Title>Price: BDT {this.props.price}</Card.Title>\r\n            {\r\n              shouldAddToCartButtonBeDisabled ? (\r\n                <ShoppingCartButton disabled={true} onClick={this.addToCart.bind(this, this.props.productID)} />\r\n              ) : (\r\n                <ShoppingCartButton disabled={false} onClick={this.addToCart.bind(this, this.props.productID)} />\r\n              )\r\n            }\r\n          </Card.Body>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  cart: state.cart.cartProducts,\r\n  favoritesList: state.products.favoritesList\r\n});\r\n\r\nexport default connect(mapStateToProps, { addToCart, addToFavorites, removeFromFavorites })(Product);\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  FETCH_PRODUCTS,\r\n  FETCH_FAVORITE_PRODUCTS,\r\n  ADD_TO_FAVORITES,\r\n  REMOVE_FROM_FAVORITES\r\n} from './types/productsActionTypes';\r\n\r\nimport {\r\n  fetchProductsFailed,\r\n  fetchProductsSucceeded,\r\n  fetchFavoriteProductsFailed,\r\n  fetchFavoriteProductsSucceeded,\r\n  addToFavoriteProductsSuccess,\r\n  addToFavoriteProductsFailed,\r\n  removeFromFavoriteProductsSuccess,\r\n  removeFromFavoriteProductsFailed,\r\n  toggleIsWorking\r\n} from './uiActions';\r\n\r\nimport { backendRoutes } from '../../routes';\r\n\r\nexport const fetchProducts = () => (dispatch, getState) => {\r\n  const { auth } = getState();\r\n  const { userToken } = auth;\r\n\r\n  dispatch(toggleIsWorking());\r\n\r\n  axios.get(backendRoutes.FETCH_PRODUCTS, \r\n    { \r\n      headers: {\r\n        Authorization: \"Bearer \" + userToken\r\n      } \r\n    })\r\n    .then(response => {\r\n      const { data } = response;\r\n      const { messageType, messageBody } = data;\r\n\r\n      switch (messageType) {\r\n        case \"error\":\r\n          dispatch(fetchProductsFailed(messageBody));\r\n          return dispatch(toggleIsWorking());\r\n        \r\n        case \"success\":\r\n          dispatch({\r\n            type: FETCH_PRODUCTS,\r\n            payload: messageBody\r\n          });\r\n\r\n          dispatch(fetchProductsSucceeded());\r\n          return dispatch(toggleIsWorking());\r\n        \r\n        default:\r\n          return dispatch(toggleIsWorking());\r\n      }\r\n    })\r\n    .catch(err => {\r\n      dispatch(fetchProductsFailed(\"Unknown error occured when communicating with the server\"));\r\n      return dispatch(toggleIsWorking());\r\n    });\r\n};\r\n\r\n\r\nexport const getFavoriteProducts = () => (dispatch, getState) => {\r\n  const { auth } = getState();\r\n  const { userToken } = auth;\r\n\r\n  dispatch(toggleIsWorking());\r\n\r\n  axios.get(backendRoutes.PRODUCT_FAVORITES,\r\n    {\r\n      headers: {\r\n        Authorization: \"Bearer \" + userToken\r\n      }\r\n    })\r\n    .then(response => {\r\n      const { data } = response;\r\n      const { messageType, messageBody } = data;\r\n\r\n      switch (messageType) {\r\n        case \"error\":\r\n          dispatch(fetchFavoriteProductsFailed(messageBody));\r\n          return dispatch(toggleIsWorking());\r\n\r\n        case \"success\":\r\n          dispatch({\r\n            type: FETCH_FAVORITE_PRODUCTS,\r\n            payload: messageBody.productIDs\r\n          });\r\n\r\n          dispatch(fetchFavoriteProductsSucceeded());\r\n          return dispatch(toggleIsWorking());\r\n\r\n        default:\r\n          return dispatch(toggleIsWorking());\r\n      }\r\n    })\r\n    .catch(err => {\r\n      dispatch(fetchFavoriteProductsFailed(\"Unknown error occured when communicating with the server\"));\r\n      return dispatch(toggleIsWorking());\r\n    });\r\n};\r\n\r\n\r\nexport const addToFavorites = (productID) => (dispatch, getState) => {\r\n  const { auth } = getState();\r\n  const { userToken } = auth;\r\n\r\n  dispatch(toggleIsWorking());\r\n\r\n  axios.post(backendRoutes.PRODUCT_FAVORITES,\r\n    {\r\n      productID: productID\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: \"Bearer \" + userToken\r\n      }\r\n    })\r\n    .then(response => {\r\n      const { data } = response;\r\n      const { messageType } = data;\r\n\r\n      switch (messageType) {\r\n        case \"error\":\r\n          const { messageBody } = data;\r\n          dispatch(addToFavoriteProductsFailed(messageBody));\r\n          return dispatch(toggleIsWorking());\r\n\r\n        case \"success\":\r\n          dispatch({\r\n            type: ADD_TO_FAVORITES,\r\n            payload: productID\r\n          });\r\n\r\n          dispatch(addToFavoriteProductsSuccess());\r\n          return dispatch(toggleIsWorking());\r\n\r\n        default:\r\n          return dispatch(toggleIsWorking());\r\n      }\r\n    })\r\n    .catch(err => {\r\n      dispatch(addToFavoriteProductsFailed(\"Unknown error occured when communicating with the server\"));\r\n      return dispatch(toggleIsWorking());\r\n    });\r\n};\r\n\r\n\r\nexport const removeFromFavorites = (productID) => (dispatch, getState) => {\r\n  const { auth } = getState();\r\n  const { userToken } = auth;\r\n\r\n  dispatch(toggleIsWorking());\r\n\r\n  axios.post(backendRoutes.UNFAVORITE_PRODUCT,\r\n    {\r\n      productID: productID\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: \"Bearer \" + userToken\r\n      }\r\n    })\r\n    .then(response => {\r\n      const { data } = response;\r\n      const { messageType } = data;\r\n\r\n      switch (messageType) {\r\n        case \"error\":\r\n          const { messageBody } = data;\r\n          dispatch(removeFromFavoriteProductsFailed(messageBody));\r\n          return dispatch(toggleIsWorking());\r\n\r\n        case \"success\":\r\n          dispatch({\r\n            type: REMOVE_FROM_FAVORITES,\r\n            payload: productID\r\n          });\r\n\r\n          dispatch(removeFromFavoriteProductsSuccess());\r\n          return dispatch(toggleIsWorking());\r\n\r\n        default:\r\n          return dispatch(toggleIsWorking());\r\n      }\r\n    })\r\n    .catch(err => {\r\n      dispatch(removeFromFavoriteProductsFailed(\"Unknown error occured when communicating with the server\"));\r\n      return dispatch(toggleIsWorking());\r\n    });\r\n};","export const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\r\nexport const FETCH_FAVORITE_PRODUCTS = \"FETCH_FAVORITE_PRODUCTS\";\r\nexport const ADD_TO_FAVORITES = \"ADD_TO_FAVORITES\";\r\nexport const REMOVE_FROM_FAVORITES = \"REMOVE_FROM_FAVORITES\";","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Product from './Product';\r\nimport { fetchProducts, getFavoriteProducts } from '../../store/actions/productsActions';\r\n\r\nclass Products extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchProducts();\r\n    this.props.getFavoriteProducts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <React.Fragment>\r\n          {\r\n            this.props.products ? (\r\n              this.props.products.map(product => (\r\n                <Product\r\n                  className=\"col-3\"\r\n                  key={product.productID}\r\n                  productID={product.productID}\r\n                  quantityType={product.quantityType}\r\n                  productName={product.name}\r\n                  price={product.price}\r\n                  productImage={product.imageURL}\r\n                />\r\n              ))\r\n            ) : \"\"  \r\n          }\r\n        </React.Fragment>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  products: state.products.productsList,\r\n  isVerifyingToken: state.ui.isVerifyingToken\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchProducts, getFavoriteProducts })(Products);\r\n","import React, { Component } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { removeFromCart, updateQuantity } from '../../store/actions/cartActions';\r\n\r\nclass CartProduct extends Component {\r\n  onClickRemoveFromCart = (productID, event) => {\r\n    this.props.removeFromCart(productID);\r\n  }\r\n\r\n  handleUpdateQuantityClick = (productID, event) => {\r\n    switch (event.target.name) {\r\n      case \"increment\":\r\n        return this.props.updateQuantity(1, productID);\r\n      \r\n      case \"decrement\":\r\n        return this.props.updateQuantity(-1, productID);\r\n      \r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img\r\n          alt=\"wat\"\r\n          src={this.props.productImage}\r\n          width=\"15%\"\r\n          height=\"15%\"\r\n          style={{\r\n            display: \"inline-block\",\r\n            marginRight: \"0.5rem\"\r\n          }}\r\n        >\r\n        </img>\r\n\r\n        <p style={{ display: \"inline-block\", fontSize: \"0.9em\", width: \"3rem\", marginRight: \"2rem\", marginTop: \"1rem\", wordWrap: \"break-word\" }}>{this.props.productName}</p>\r\n        \r\n        <Form.Group style={{ display: \"inline-block\" }}>\r\n          <Button variant=\"sm\" name=\"increment\" onClick={this.handleUpdateQuantityClick.bind(this, this.props.productID)}>+</Button>\r\n          <Form.Control size=\"sm\" type=\"text\" style={{\r\n            width: \"3rem\",\r\n            display: \"inline-block\"\r\n          }} value={this.props.quantity}\r\n          readOnly/>          \r\n          <Button variant=\"sm\" name=\"decrement\" onClick={this.handleUpdateQuantityClick.bind(this, this.props.productID)}>-</Button>\r\n        </Form.Group>\r\n\r\n        <p style={{ display: \"inline-block\", marginLeft: \"0.5rem\", marginTop: \"0.5rem\" }}>Price: {this.props.quantity * this.props.price}</p>\r\n        \r\n        <Button\r\n          variant=\"danger lg\"\r\n          className=\"float-right\"\r\n          style={{ position: \"relative\", marginTop: \"0.5rem\", borderRadius: \"50%\", marginLeft: \"0.5rem\" }}\r\n          onClick={this.onClickRemoveFromCart.bind(this, this.props.productID)}\r\n        >\r\n          <FontAwesomeIcon icon=\"ban\" />\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, { removeFromCart, updateQuantity })(CartProduct);\r\n","import React, { Component } from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport CartProduct from './CartProduct';\r\nimport { removeFromCart } from \"../../store/actions/cartActions\";\r\n\r\nimport { clientRoutes } from \"../../routes\";\r\n\r\n\r\n\r\n\r\nclass Cart extends Component {\r\n  placeOrder = () => {\r\n    if (this.props.cart.length > 0) {\r\n      this.props.history.push(clientRoutes.ORDER_ROUTE);\r\n    }\r\n  }\r\n\r\n  clearCart = () => {\r\n    this.props.cart.forEach(product => {\r\n      this.props.removeFromCart(product.productID);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let grandTotalPrice = 0;\r\n\r\n    if (this.props.cart && this.props.cart.length > 0) {\r\n      this.props.cart.forEach(cartProduct => {\r\n        grandTotalPrice += cartProduct.price * cartProduct.quantity;\r\n      });\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card style={{ width: '28rem', height: \"50rem\", marginTop: \"1rem\", marginLeft: \"-1.5rem\" }}>\r\n          <Card.Header>\r\n            Your Cart\r\n            <FontAwesomeIcon onClick={this.clearCart} icon=\"trash-alt\" style={{ cursor: \"pointer\", float: \"right\", width: \"1.5rem\", height: \"1.5rem\" }}/>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            {\r\n              (this.props.cart.length > 0) ? (\r\n                this.props.cart.map(cartProduct => (\r\n                  <CartProduct\r\n                    key={cartProduct.productID}\r\n                    productID={cartProduct.productID}\r\n                    productImage={cartProduct.imageURL}\r\n                    productName={cartProduct.name}\r\n                    price={cartProduct.price}\r\n                    quantity={cartProduct.quantity}\r\n                  />\r\n                ))\r\n              ) : \"You don't have any items in the cart\"\r\n            }\r\n          </Card.Body>\r\n\r\n          <Button\r\n            variant=\"primary\"\r\n            style={{\r\n              width: \"40%\",\r\n              background: \"orange\",\r\n              borderColor: \"orange\",\r\n              position: \"absolute\",\r\n              bottom: \"1.5rem\",\r\n              left: \"1rem\"\r\n            }}\r\n            onClick={this.placeOrder}\r\n          >\r\n            Place Order\r\n          </Button>\r\n\r\n          <h5 style={{\r\n            position: \"absolute\",\r\n            left: \"13.5rem\",\r\n            bottom: \"1.5rem\",\r\n            fontSize: \"1.1rem\"\r\n          }}>\r\n            Grand Total: BDT {grandTotalPrice.toFixed(2)}\r\n          </h5>        \r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  cart: state.cart.cartProducts\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { removeFromCart }),\r\n  withRouter\r\n)(Cart);","import React from \"react\";\nimport { Alert, Spinner } from \"react-bootstrap\";\n\n\nconst AlertMessage = (props) => {\n\treturn (\n\t\t<Alert style={{ marginTop: \"1rem\", width: \"100%\", display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }} variant={props.variant}>\n\t\t\t{\n\t\t\t\tprops.useSpinner ? (<Spinner style={{ display: \"inline-block\", marginRight: \"2rem\" }} animation=\"border\" role=\"status\" variant=\"sm\" />) : \"\"\n\t\t\t}\t\t\n\t\t\t{props.message}\n  \t</Alert>\n\t);\n}\n\nexport default AlertMessage;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Products from '../partials/Products';\r\nimport Cart from '../partials/Cart';\r\nimport AlertMessage from '../partials/AlertMessage';\r\n\r\nclass ProductsPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row\" style={{ marginTop: \"2rem\" }}>\r\n        <div className=\"col-9\">          \r\n          {\r\n            this.props.isWorking ? (\r\n              <React.Fragment>\r\n                <AlertMessage style={{ display: \"inline-block\" }} variant=\"info\" message=\"Working, please wait...\" useSpinner={true} />\r\n              </React.Fragment>\r\n            ) : \"\"\r\n          }\r\n          <Products />\r\n        </div>\r\n        <div className=\"col-3\">\r\n          <Cart />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  isWorking: state.ui.isWorking\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(ProductsPage);\r\n","import React, { Component } from 'react';\r\nimport { Card, Form, Button, Spinner } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { loginLocal, loginOauthSuccess } from \"../../store/actions/authActions\";\r\nimport { loginError } from \"../../store/actions/uiActions\";\r\nimport AlertMessage from \"../partials/AlertMessage\";\r\n\r\nimport { clientRoutes, backendRoutes } from \"../../routes\";\r\n\r\nclass LoginPage extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\temail: \"\",\r\n\t\t\tpassword: \"\"\r\n\t\t}\r\n\t}\r\n\r\n\tonGoogleLoginClick = () => {\r\n\t\twindow.open(backendRoutes.GOOGLE_OAUTH_LOGIN, \"_self\");\r\n\t}\r\n\r\n\tonLoginClick = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst { email, password } = this.state;\r\n\r\n\t\t// validate\r\n\t\tif (email === \"\" || password === \"\") {\r\n\t\t\treturn this.props.loginError(\"Please fill in all the fields!\");\r\n\t\t}\r\n\t\t\r\n\t\tthis.props.loginLocal(email, password);\r\n\t}\r\n\r\n\tonHandleTextFieldChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\t[event.target.name]: event.target.value\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tif(this.props.match.params.data) {\r\n\t\t\tlet messagesArray = this.props.match.params.data.split(\"&\");\r\n\r\n\t\t\tlet messageType = messagesArray[0].split(\"=\")[1];\r\n\r\n\t\t\tif (messageType === \"error\") {\r\n\t\t\t\tthis.props.loginError(messagesArray[1].split(\"=\")[1]);\r\n\t\t\t\tthis.props.history.push(clientRoutes.LOGIN_ROUTE);\r\n\t\t\t} else {\r\n\t\t\t\tlet token = messagesArray[1].split(\"=\")[1];\r\n\t\t\t\tthis.props.loginOauthSuccess(token);\r\n\t\t\t\tthis.props.history.push(clientRoutes.PRODUCTS_ROUTE);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Card style={{ marginTop: \"2rem\", width: \"30rem\", display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.props.loginErrorState.error && this.props.loginErrorState.errorMessage ? (\r\n\t\t\t\t\t\t\t<AlertMessage variant=\"danger\" message={this.props.loginErrorState.errorMessage} />\r\n\t\t\t\t\t\t) : \"\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<Card.Header>\r\n\t\t\t\t\t\t<h1 style={{textAlign: \"center\"}}>Login</h1>\r\n\t\t\t\t\t</Card.Header>\r\n\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t  <Form.Group controlId=\"formBasicEmail\">\r\n\t\t\t\t\t\t    <Form.Label>Email address</Form.Label>\r\n\t\t\t\t\t\t    <Form.Control onChange={this.onHandleTextFieldChange} type=\"email\" name=\"email\" placeholder=\"e.g. myawesome.email@gmail.com\" />\r\n\t\t\t\t\t\t  </Form.Group>\r\n\r\n\t\t\t\t\t\t  <Form.Group controlId=\"formBasicPassword\">\r\n\t\t\t\t\t\t    <Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t    <Form.Control onChange={this.onHandleTextFieldChange} type=\"password\" name=\"password\" placeholder=\"Your Secure Password\" />\r\n\t\t\t\t\t\t  </Form.Group>\r\n\r\n\t\t\t\t\t\t  <Button style={{ display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", background: \"orange\", borderColor: \"orange\" }} variant=\"primary\" type=\"submit\" onClick={this.onLoginClick}>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tthis.props.isWorking ? (\r\n\t\t\t\t\t\t\t\t\t\t<Spinner animation=\"border\" role=\"status\" size=\"sm\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"sr-only\">Please Wait</span>\r\n\t\t\t\t\t\t\t\t\t\t</Spinner>\r\n\t\t\t\t\t\t\t\t\t) : \"Login\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t<p className=\"text mt-4\" style={{ textAlign: \"center\" }}>Alternatively, you can sign in using one of the following providers: </p>\r\n\t\t\t\t\t\t<Button style={{ background: \"red\", borderColor: \"red\", display: \"block\", marginTop: \"2rem\", marginLeft: \"auto\", marginRight: \"auto\" }} onClick={this.onGoogleLoginClick}> \r\n\t\t\t\t\t\t\t<FontAwesomeIcon className=\"mr-3\" icon={[\"fab\", \"google\"]}></FontAwesomeIcon>\r\n\t\t\t\t\t\t\tLogin With Google \r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n\tloginErrorState: state.ui.login,\r\n\tisWorking: state.ui.isWorking\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginLocal, loginOauthSuccess, loginError })(LoginPage);","import React, { Component } from 'react'\r\nimport { Table } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nclass OrderPage extends Component {\r\n  render() {\r\n    let totalPrice = 0;\r\n\r\n    if (this.props.cart) {\r\n      this.props.cart.forEach(product => {\r\n        totalPrice += product.quantity * product.price;\r\n      });\r\n    }\r\n\r\n    return (      \r\n      <div>\r\n        <Link to=\"/\">\r\n          <FontAwesomeIcon style={{ marginTop: \"2rem\", width: \"2rem\", height: \"2rem\" }} icon=\"arrow-circle-left\"></FontAwesomeIcon>\r\n          {' '} <h3 style={{ display: \"inline-block\" }}>Back to products page</h3>\r\n        </Link>\r\n        <h1 style={{ display: \"block\", marginTop: \"2rem\", marginLeft: \"auto\", marginRight: \"auto\" }}>Confirm your order</h1>\r\n        <Table striped bordered hover className=\"mt-4\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Product Name</th>\r\n              <th>Unit Price (BDT.)</th>\r\n              <th>Quantity</th>\r\n              <th>Total Price (BDT.)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              !this.props.cart ? \"\" : (\r\n                this.props.cart.map((cartProduct, index) => (\r\n                  <tr key={cartProduct.productID}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{cartProduct.name}</td>\r\n                    <td>{parseFloat(cartProduct.price).toFixed(2)}</td>\r\n                    <td>{cartProduct.quantity}</td>\r\n                    <td>{parseFloat(cartProduct.price * cartProduct.quantity).toFixed(2)}</td>\r\n                  </tr>\r\n                ))\r\n              )\r\n            }\r\n            {\r\n              !this.props.cart ? \"\" : (\r\n                <tr style={{ fontWeight: \"bold\" }}>\r\n                  <td colSpan=\"4\"> Total </td>\r\n                  <td>BDT. {parseFloat(totalPrice).toFixed(2)}</td>\r\n                </tr>\r\n              )\r\n            }\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  cart: state.cart.cartProducts\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(OrderPage);","import React, { Component } from 'react';\r\nimport { Card, Form, Button, Spinner } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { signupLocal } from \"../../store/actions/authActions\";\r\nimport { signupError } from \"../../store/actions/uiActions\";\r\nimport AlertMessage from \"../partials/AlertMessage\";\r\nimport { backendRoutes } from \"../../routes\";\r\n\r\n\r\nclass SignupPage extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\temail: \"\",\r\n\t\t\tusername: \"\",\r\n\t\t\tpassword: \"\"\r\n\t\t}\r\n\t}\r\n\r\n\tonGoogleLoginClick = () => {\r\n\t\twindow.open(backendRoutes.GOOGLE_OAUTH_LOGIN, \"_self\");\r\n\t}\r\n\r\n\tonSignupClick = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst { email, password, username } = this.state;\r\n\r\n\t\tif (email === \"\" || password === \"\" || username === \"\") {\r\n\t\t\treturn this.props.signupError(\"Please fill in all the required fields!\");\r\n\t\t}\r\n\r\n\t\tif (password.length < 6) {\r\n\t\t\treturn this.props.signupError(\"Password must be at least 6 characters long!\");\r\n\t\t}\r\n\r\n\t\tif (username.length < 4) {\r\n\t\t\treturn this.props.signupError(\"Username must be at least 4 characters long!\");\r\n\t\t}\r\n\r\n\t\tif (!/^[a-zA-Z0-9_]+$/.test(username)) {\r\n\t\t\treturn this.props.signupError(\"Username can only contain alphabets, numbers and underscores!\");\r\n\t\t}\r\n\r\n\t\tif (!/^[a-zA-Z0-9_.]+@[a-z]+\\.[a-z]+$/.test(email)) {\r\n\t\t\treturn this.props.signupError(\"Invalid email\");\r\n\t\t}\r\n\r\n\t\tif (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/.test(password)) {\r\n\t\t\treturn this.props.signupError(\"Passwords must be a combination of uppercase letters, lowercase letters and numbers\");\r\n\t\t}\r\n\r\n\t\tthis.props.signupLocal(username, email, password);\r\n\t}\r\n\r\n\tonHandleTextFieldChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\t[event.target.name]: event.target.value\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Card style={{ marginTop: \"2rem\", width: \"30rem\", display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.props.signupErrorState.error && this.props.signupErrorState.errorMessage ? (\r\n\t\t\t\t\t\t\t<AlertMessage variant=\"danger\" message={this.props.signupErrorState.errorMessage} />\r\n\t\t\t\t\t\t) : \"\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<Card.Header>\r\n\t\t\t\t\t\t<h1 style={{textAlign: \"center\"}}>Sign Up</h1>\r\n\t\t\t\t\t</Card.Header>\r\n\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<Form.Group controlId=\"formBasicUsername\">\r\n\t\t\t\t\t\t\t\t<Form.Label>Username</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control onChange={this.onHandleTextFieldChange} type=\"text\" name=\"username\" placeholder=\"e.g. myawesome_name\" />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t  <Form.Group controlId=\"formBasicEmail\">\r\n\t\t\t\t\t\t    <Form.Label>Email address</Form.Label>\r\n\t\t\t\t\t\t    <Form.Control onChange={this.onHandleTextFieldChange} type=\"email\" name=\"email\" placeholder=\"e.g. myawesome.email@gmail.com\" />\r\n\t\t\t\t\t\t  </Form.Group>\r\n\r\n\t\t\t\t\t\t  <Form.Group controlId=\"formBasicPassword\">\r\n\t\t\t\t\t\t    <Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t    <Form.Control onChange={this.onHandleTextFieldChange} type=\"password\" name=\"password\" placeholder=\"Your Secure Password\" />\r\n\t\t\t\t\t\t  </Form.Group>\r\n\r\n\t\t\t\t\t\t  <Button style={{ display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", background: \"orange\", borderColor: \"orange\" }} variant=\"primary\" type=\"submit\" onClick={this.onSignupClick}>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tthis.props.isWorking ? (\r\n\t\t\t\t\t\t\t\t\t\t<Spinner animation=\"border\" role=\"status\" size=\"sm\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"sr-only\">Please Wait</span>\r\n\t\t\t\t\t\t\t\t\t\t</Spinner>\r\n\t\t\t\t\t\t\t\t\t) : \"Sign Up\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t  </Button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t<p className=\"text mt-4\" style={{ textAlign: \"center\" }}>Alternatively, you can sign in using one of the following providers: </p>\r\n\t\t\t\t\t\t<Button style={{ background: \"red\", borderColor: \"red\", display: \"block\", marginTop: \"2rem\", marginLeft: \"auto\", marginRight: \"auto\" }} onClick={this.onGoogleLoginClick}> \r\n\t\t\t\t\t\t\t<FontAwesomeIcon className=\"mr-3\" icon={[\"fab\", \"google\"]}></FontAwesomeIcon>\r\n\t\t\t\t\t\t\tLogin With Google \r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n\tsignupErrorState: state.ui.signup,\r\n\tisWorking: state.ui.isWorking\r\n});\r\n\r\nexport default connect(mapStateToProps, { signupLocal, signupError })(SignupPage);","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction ErrorPage() {\r\n  return (\r\n    <div className=\"mt-4\" style={{ display: \"inline-block\", marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n      <h1>The page was not found.</h1>\r\n      <Link to=\"/\">\r\n        <FontAwesomeIcon style={{ marginTop: \"2rem\", width: \"2rem\", height: \"2rem\" }} icon=\"arrow-circle-left\"></FontAwesomeIcon>\r\n        {' '} <h3 style={{ display: \"inline-block\" }}>Back to products page</h3>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorPage;\r\n","import React, { Component } from \"react\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { clientRoutes } from \"../../routes\";\n\nfunction isAuthenticated (WrappedComponent) {\n\treturn class EnhancedComponent extends Component {\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.props.isUserAuthenticated ? \n\t\t\t\t\t\t<WrappedComponent {...this.props} /> : \n\t\t\t\t\t\t<Redirect to={clientRoutes.LOGIN_ROUTE} />\n\t\t\t\t\t}\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t}\n\t}\n}\n\nconst mapStateToProps = (state, props) => ({\n\tisUserAuthenticated: state.auth.isUserAuthenticated\n});\n\nexport default compose(\n\tconnect(mapStateToProps, {}), \n\tisAuthenticated\n);","import React, { Component } from \"react\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { clientRoutes } from \"../../routes\";\n\nfunction isNotAuthenticated (WrappedComponent) {\n\treturn class EnhancedComponent extends Component {\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t{\n\t\t\t\t\t\t!this.props.isUserAuthenticated ? \n\t\t\t\t\t\t<WrappedComponent {...this.props} /> : \n\t\t\t\t\t\t<Redirect to={clientRoutes.PRODUCTS_ROUTE} />\n\t\t\t\t\t}\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t}\n\t}\n}\n\nconst mapStateToProps = (state, props) => ({\n\tisUserAuthenticated: state.auth.isUserAuthenticated\n});\n\nexport default compose(\n\tconnect(mapStateToProps, {}), \n\tisNotAuthenticated\n);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Container } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport { clientRoutes } from \"./routes\";\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas, faShoppingCart, faHeart as faSolidHeart, faBan, faArrowAltCircleLeft, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { fab, faGoogle } from '@fortawesome/free-brands-svg-icons';\nimport { far, faHeart as faRegularHeart } from \"@fortawesome/free-regular-svg-icons\";\n\nimport NavigationBar from './components/partials/NavigationBar';\nimport ProductsPage from './components/pages/ProductsPage';\nimport LoginPage from \"./components/pages/LoginPage\";\nimport OrderPage from './components/pages/OrderPage';\nimport SignupPage from './components/pages/SignupPage';\nimport ErrorPage from \"./components/pages/404Page\";\n\nimport isAuthenticated from \"./components/hoc/isAuthenticated\";\nimport isNotAuthenticated from \"./components/hoc/isNotAuthenticated\";\n\nlibrary.add(fas, far, fab, faGoogle, faSolidHeart, faRegularHeart, faShoppingCart, faBan, faArrowAltCircleLeft, faTrashAlt);\n\nclass App extends Component {\n  render() {\n    return this.props.isVerifyingToken ? null : (\n      <div>\n        <NavigationBar /> \n        <Container>\n          <Router>\n            <Switch>\n              <Route exact path={clientRoutes.LOGIN_ROUTE} component={isNotAuthenticated(LoginPage)} />\n              <Route exact path={clientRoutes.LOGIN_FAILURE_ROUTE} component={isNotAuthenticated(LoginPage)} />\n              <Route exact path={clientRoutes.LOGIN_SUCCESS_ROUTE} component={isNotAuthenticated(LoginPage)} />\n\n              <Route exact path={clientRoutes.SIGNUP_ROUTE} component={isNotAuthenticated(SignupPage)} />\n\n              <Route exact path={clientRoutes.ORDER_ROUTE} component={isAuthenticated(OrderPage)} />\n\n              <Route exact path={clientRoutes.PRODUCTS_ROUTE} component={isAuthenticated(ProductsPage)} />\n\n              <Route component={ErrorPage} />\n            </Switch>\n          </Router>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => ({\n  isVerifyingToken: state.ui.isVerifyingToken\n});\n\nexport default connect(mapStateToProps, {})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  FETCH_PRODUCTS,\r\n  FETCH_FAVORITE_PRODUCTS,\r\n  ADD_TO_FAVORITES,\r\n  REMOVE_FROM_FAVORITES\r\n} from '../actions/types/productsActionTypes';\r\n\r\nconst initialState = {\r\n  productsList: null,\r\n  favoritesList: null \r\n};\r\n\r\nconst productsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        productsList: action.payload\r\n      };\r\n    \r\n    case FETCH_FAVORITE_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        favoritesList: action.payload\r\n      }\r\n    \r\n    case ADD_TO_FAVORITES:\r\n      return {\r\n        ...state,\r\n        favoritesList: [\r\n          ...state.favoritesList,\r\n          action.payload\r\n        ]\r\n      };\r\n    \r\n    case REMOVE_FROM_FAVORITES:\r\n      return {\r\n        ...state,\r\n        favoritesList: state.favoritesList.filter(productID => productID !== action.payload)\r\n      };\r\n  \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default productsReducer;","import { \r\n  FETCH_PRODUCTS_SUCCESS, \r\n  FETCH_PRODUCTS_FAIL, \r\n  CLEAR_ERRORS, \r\n  TOGGLE_VERIFYING_TOKEN,\r\n  LOGIN_ERROR,\r\n  SIGNUP_ERROR,\r\n  FETCH_FAVORITE_PRODUCTS_FAILED,\r\n  FETCH_FAVORITE_PRODUCTS_SUCCESS,\r\n  ADD_TO_FAVORITES_FAILED,\r\n  ADD_TO_FAVORITES_SUCCESS,\r\n  REMOVE_FROM_FAVORITES_FAILED,\r\n  REMOVE_FROM_FAVORITES_SUCCESS,\r\n  TOGGLE_IS_WORKING\r\n} from '../actions/types/uiActionTypes';\r\n\r\nconst initialState = {\r\n  fetchProducts: {\r\n    error: false,\r\n    errorMessage: null\r\n  },\r\n  fetchFavoriteProducts: {\r\n    error: false,\r\n    errorMessage: null\r\n  },\r\n  addToFavorites: {\r\n    error: false,\r\n    errorMessage: null\r\n  },\r\n  removeFromFavorites: {\r\n    error: false,\r\n    errorMessage: null\r\n  },\r\n  login: {\r\n    error: false,\r\n    errorMessage: null\r\n  },\r\n  signup: {\r\n    error: false,\r\n    errorMessage: null\r\n  },\r\n  isVerifyingToken: false,\r\n  isWorking: false\r\n};\r\n\r\n\r\nconst uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_IS_WORKING:\r\n      return {\r\n        ...state,\r\n        isWorking: !state.isWorking\r\n      }\r\n    \r\n    case FETCH_PRODUCTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        fetchProducts: {\r\n          error: false,\r\n          errorMessage: null\r\n        }  \r\n      }\r\n    \r\n    case FETCH_PRODUCTS_FAIL:\r\n      return {\r\n        ...state,\r\n        fetchProducts: {\r\n          error: true,\r\n          errorMessage: action.payload\r\n        }        \r\n      }\r\n    \r\n    case FETCH_FAVORITE_PRODUCTS_FAILED:\r\n      return {\r\n        ...state,\r\n        fetchFavoriteProducts: {\r\n          error: true,\r\n          errorMessage: action.payload\r\n        }\r\n      };\r\n    \r\n    case FETCH_FAVORITE_PRODUCTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        fetchFavoriteProducts: {\r\n          error: false,\r\n          errorMessage: null\r\n        }\r\n      };\r\n    \r\n    case ADD_TO_FAVORITES_FAILED:\r\n      return {\r\n        ...state,\r\n        addToFavorites: {\r\n          error: true,\r\n          errorMessage: action.payload\r\n        }\r\n      }\r\n    \r\n    case ADD_TO_FAVORITES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        addToFavorites: {\r\n          error: false,\r\n          errorMessage: null\r\n        }\r\n      }\r\n    \r\n    case REMOVE_FROM_FAVORITES_FAILED:\r\n      return {\r\n        ...state,\r\n        removeFromFavorites: {\r\n          error: true,\r\n          errorMessage: action.payload\r\n        }\r\n      }\r\n      \r\n    case REMOVE_FROM_FAVORITES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        removeFromFavorites: {\r\n          error: false,\r\n          errorMessage: null\r\n        },\r\n      }\r\n        \r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        fetchProducts: {\r\n          error: false,\r\n          errorMessage: null\r\n        },\r\n        addToFavorites: {\r\n          error: false,\r\n          errorMessage: null\r\n        },\r\n        removeFromFavorites: {\r\n          error: false,\r\n          errorMessage: null\r\n        },\r\n        login: {\r\n          error: false,\r\n          errorMessage: null\r\n        },\r\n        signup: {\r\n          error: false,\r\n          errorMessage: null\r\n        },\r\n        fetchFavoriteProducts: {\r\n          error: false,\r\n          errorMessage: null\r\n        }\r\n      }\r\n    \r\n    case LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        login: {\r\n          error: true,\r\n          errorMessage: action.payload\r\n        }\r\n      };\r\n\r\n    case SIGNUP_ERROR:\r\n      return {\r\n        ...state,\r\n        signup: {\r\n          error: true,\r\n          errorMessage: action.payload\r\n        }\r\n      };\r\n\r\n    case TOGGLE_VERIFYING_TOKEN:\r\n      return {\r\n        ...state,\r\n        isVerifyingToken: !state.isVerifyingToken\r\n      }\r\n        \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default uiReducer;","import { ADD_TO_CART, REMOVE_FROM_CART, UPDATE_QUANTITY } from '../actions/types/cartActionTypes';\r\n\r\nconst initialState = {\r\n  cartProducts: []\r\n};\r\n\r\n\r\nconst cartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      let item = action.payload;\r\n\r\n      item.quantity = 1;\r\n\r\n      return {\r\n        ...state,\r\n        cartProducts: state.cartProducts.concat(item)\r\n      };\r\n    \r\n    case REMOVE_FROM_CART:\r\n      return {\r\n        ...state,\r\n        cartProducts: state.cartProducts.filter(product => product.productID !== action.payload)\r\n      };\r\n    \r\n    case UPDATE_QUANTITY:\r\n      const { quantity, productID } = action.payload;\r\n      const productIndex = state.cartProducts.findIndex(cartProduct => cartProduct.productID === productID);\r\n      \r\n      let newQuantity = state.cartProducts[productIndex].quantity;\r\n\r\n      if (newQuantity > 0) {\r\n        newQuantity += quantity;\r\n        \r\n        if (newQuantity === 0) {\r\n          newQuantity = 1;\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        cartProducts: [\r\n          ...state.cartProducts.slice(0, productIndex),\r\n          {\r\n            ...state.cartProducts[productIndex],\r\n            quantity: newQuantity\r\n          },\r\n          ...state.cartProducts.slice(productIndex + 1)\r\n        ]\r\n      };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default cartReducer;\r\n\r\n","import {LOGIN_SUCCESS, LOGIN_FAILED, SIGNUP_FAILED, LOGOUT} from \"../actions/types/authActionTypes\";\r\n\r\nconst initialState = {\r\n\tisUserAuthenticated: false,\r\n\tuserToken: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase LOGIN_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisUserAuthenticated: true,\r\n\t\t\t\tuserToken: action.payload\r\n\t\t\t};\r\n\r\n\t\tcase LOGIN_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisUserAuthenticated: false,\r\n\t\t\t\tuserToken: null\r\n\t\t\t};\r\n\r\n\t\tcase SIGNUP_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisUserAuthenticated: false,\r\n\t\t\t\tuserToken: null\r\n\t\t\t};\r\n\r\n\t\tcase LOGOUT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisUserAuthenticated: false,\r\n\t\t\t\tuserToken: null\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n\r\nexport default authReducer;","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport productsReducer from './reducers/productsReducer';\r\nimport uiReducer from './reducers/uiReducer';\r\nimport cartReducer from './reducers/cartReducer';\r\nimport authReducer from \"./reducers/authReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  products: productsReducer,\r\n  ui: uiReducer,\r\n  cart: cartReducer,\r\n  auth: authReducer\r\n});\r\n\r\nconst initialState = {};\r\n\r\nlet middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(\r\n    applyMiddleware(...middleware)\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\n\nimport store from './store/store';\nimport { verifyLogin } from \"./store/actions/authActions\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nstore.dispatch(verifyLogin());\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,  \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}