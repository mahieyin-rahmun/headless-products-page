{"version":3,"sources":["routes.js","store/actions/uiActions.js","store/actions/types/uiActionTypes.js","components/partials/NavigationBar.js","store/actions/authActions.js","store/actions/types/authActionTypes.js","components/partials/FavoritesButton.js","components/partials/ShoppingCartButton.js","store/actions/cartActions.js","store/actions/types/cartActionTypes.js","components/partials/Product.js","store/actions/productsActions.js","store/actions/types/productsActionTypes.js","components/partials/Products.js","components/partials/CartProduct.js","components/partials/Cart.js","components/partials/AlertMessage.js","components/pages/ProductsPage.js","components/pages/LoginPage.js","components/pages/OrderPage.js","components/pages/SignupPage.js","components/pages/OrdersPage.js","components/pages/404Page.js","components/hoc/isAuthenticated.js","components/hoc/isNotAuthenticated.js","App.js","serviceWorker.js","store/reducers/productsReducer.js","store/reducers/uiReducer.js","store/reducers/cartReducer.js","store/reducers/authReducer.js","store/store.js","index.js"],"names":["clientRoutes","backendRoutes","fetchProductsFailed","errorMessage","dispatch","type","payload","fetchFavoriteProductsFailed","clearErrors","loginError","signupError","addToFavoriteProductsFailed","removeFromFavoriteProductsFailed","orderFailed","fetchOrdersFailed","NavigationBar","Fragment","Navbar","bg","sticky","style","background","expand","Brand","Toggle","aria-controls","Collapse","id","this","props","isUserAuthenticated","Nav","className","textDecoration","color","to","Link","href","onClick","logout","Component","connect","state","auth","window","localStorage","removeItem","FavoritesButton","Button","variant","borderRadius","borderColor","position","top","right","icon","ShoppingCartButton","disabled","removeFromCart","productID","clearCart","Product","getQuantityText","quantityType","addToCart","event","toggleProductIsFavorited","isProductFavorited","removeFromFavorites","addToFavorites","shouldAddToCartButtonBeDisabled","cart","findIndex","product","favoritesList","Card","width","margin","Img","src","productImage","bind","Body","Title","productName","Text","price","cartProducts","products","getState","productsList","filter","userToken","axios","post","headers","Authorization","then","response","data","messageType","messageBody","catch","err","Products","fetchProducts","getFavoriteProducts","map","key","name","imageURL","isVerifyingToken","ui","get","productIDs","CartProduct","onClickRemoveFromCart","handleUpdateQuantityClick","target","updateQuantity","alt","height","display","marginRight","fontSize","marginTop","wordWrap","Form","Group","Control","size","value","quantity","readOnly","marginLeft","Cart","placeOrder","length","history","push","clearCartProducts","grandTotalPrice","forEach","cartProduct","Header","cursor","float","bottom","left","toFixed","compose","withRouter","AlertMessage","Alert","useSpinner","Spinner","animation","role","message","ProductsPage","isWorking","LoginPage","onGoogleLoginClick","open","onLoginClick","preventDefault","email","password","loginLocal","onHandleTextFieldChange","setState","match","params","messagesArray","split","token","loginOauthSuccess","loginErrorState","error","textAlign","controlId","Label","onChange","placeholder","login","setItem","OrderPage","handlePlaceOrder","i","newProduct","redirect","order","success","timer","setTimeout","clearTimeout","totalPrice","Table","striped","bordered","hover","index","parseFloat","fontWeight","colSpan","backgroundColor","SignupPage","onSignupClick","username","test","signupLocal","signupErrorState","signup","OrdersPage","fetchOrders","orders","orderID","Date","createdAt","toLocaleDateString","totalAmount","ordersList","ErrorPage","WrappedComponent","library","add","fas","far","fab","faGoogle","faSolidHeart","faRegularHeart","faShoppingCart","faBan","faArrowAltCircleLeft","faTrashAlt","App","Container","exact","path","component","isNotAuthenticated","isAuthenticated","Boolean","location","hostname","initialState","latestOrder","productsReducer","action","fetchFavoriteProducts","uiReducer","cartReducer","item","concat","productIndex","newQuantity","slice","authReducer","rootReducer","combineReducers","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getItem","status","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.2494712f.chunk.js","sourcesContent":["// ccontains client and backend route definitions\r\n\r\nexport const clientRoutes = {\r\n  LOGIN_ROUTE: \"/login\",\r\n  LOGIN_SUCCESS_ROUTE: \"/login/failed/:data\",\r\n  LOGIN_FAILURE_ROUTE: \"/login/success/:data\",\r\n  SIGNUP_ROUTE: \"/signup\",\r\n  ORDER_ROUTE: \"/order\",\r\n  ORDERS_ROUTE: \"/orders\",\r\n  PRODUCTS_ROUTE: \"/\"\r\n};\r\n\r\n\r\nexport const backendRoutes = {\r\n  GOOGLE_OAUTH_LOGIN: \"/api/v1/auth/google/login\",\r\n  TOKEN_VERIFY: \"/api/v1/auth/verify\",\r\n  LOCAL_LOGIN: \"/api/v1/auth/local/login\",\r\n  LOCAL_SIGNUP: \"/api/v1/auth/local/signup\",\r\n  FETCH_PRODUCTS: \"/api/v1/products\",\r\n  PRODUCT_FAVORITES: \"/api/v1/products/favorite\",\r\n  UNFAVORITE_PRODUCT: \"/api/v1/products/unfavorite\",\r\n  PLACE_ORDER: \"/api/v1/products/confirmorder\",\r\n  FETCH_ORDERS: \"/api/v1/products/orders\"\r\n};","import { \r\n  FETCH_PRODUCTS_SUCCESS, \r\n  FETCH_PRODUCTS_FAIL, \r\n  CLEAR_ERRORS, \r\n  TOGGLE_VERIFYING_TOKEN,\r\n  LOGIN_ERROR,\r\n  SIGNUP_ERROR,\r\n  FETCH_FAVORITE_PRODUCTS_FAILED,\r\n  FETCH_FAVORITE_PRODUCTS_SUCCESS, \r\n  ADD_TO_FAVORITES_FAILED,\r\n  ADD_TO_FAVORITES_SUCCESS,\r\n  REMOVE_FROM_FAVORITES_FAILED,\r\n  REMOVE_FROM_FAVORITES_SUCCESS,\r\n  TOGGLE_IS_WORKING,\r\n  ORDER_FAILED, \r\n  ORDER_SUCCESS,\r\n  FETCH_ORDERS_FAILED,\r\n  FETCH_ORDERS_SUCCESS\r\n} from './types/uiActionTypes';\r\n\r\n\r\nexport const toggleIsWorking = () => (dispatch) => {\r\n  return dispatch({\r\n    type: TOGGLE_IS_WORKING\r\n  });\r\n}\r\n\r\nexport const fetchProductsFailed = (errorMessage) => (dispatch) => {\r\n  return dispatch({\r\n    type: FETCH_PRODUCTS_FAIL,\r\n    payload: errorMessage\r\n  });\r\n};\r\n\r\n\r\nexport const fetchProductsSucceeded = () => (dispatch) => {\r\n  return dispatch({\r\n    type: FETCH_PRODUCTS_SUCCESS\r\n  });\r\n};\r\n\r\n\r\nexport const fetchFavoriteProductsFailed = (errorMessage) => (dispatch) => {\r\n  return dispatch({\r\n    type: FETCH_FAVORITE_PRODUCTS_FAILED,\r\n    payload: errorMessage\r\n  });\r\n}\r\n\r\nexport const fetchFavoriteProductsSucceeded = () => (dispatch) => {\r\n  return dispatch({\r\n    type: FETCH_FAVORITE_PRODUCTS_SUCCESS\r\n  }); \r\n}\r\n\r\n\r\nexport const clearErrors = () => (dispatch) => {\r\n  return dispatch({\r\n    type: CLEAR_ERRORS\r\n  });\r\n};\r\n\r\nexport const toggleVerifyingToken = () => (dispatch) => {\r\n  return dispatch({\r\n    type: TOGGLE_VERIFYING_TOKEN\r\n  });\r\n}\r\n\r\n\r\nexport const loginError = (errorMessage) => (dispatch) => {\r\n  return dispatch({\r\n    type: LOGIN_ERROR,\r\n    payload: errorMessage\r\n  });\r\n};\r\n\r\n\r\nexport const signupError = (errorMessage) => (dispatch) => {\r\n  return dispatch({\r\n    type: SIGNUP_ERROR,\r\n    payload: errorMessage\r\n  });\r\n};\r\n\r\n\r\nexport const addToFavoriteProductsFailed = (errorMessage) => (dispatch) => {\r\n  return dispatch({\r\n    type: ADD_TO_FAVORITES_FAILED,\r\n    payload: errorMessage\r\n  })\r\n};\r\n\r\nexport const addToFavoriteProductsSuccess = () => (dispatch) => {\r\n  return dispatch({\r\n    type: ADD_TO_FAVORITES_SUCCESS\r\n  });\r\n}\r\n  \r\nexport const removeFromFavoriteProductsSuccess = () => (dispatch) => {\r\n  return dispatch({\r\n    type: REMOVE_FROM_FAVORITES_SUCCESS\r\n  });\r\n}\r\n\r\nexport const removeFromFavoriteProductsFailed = (errorMessage) => (dispatch) => {\r\n  return dispatch({\r\n    type: REMOVE_FROM_FAVORITES_FAILED,\r\n    payload: errorMessage\r\n  })\r\n};\r\n\r\nexport const orderFailed = (errorMessage) => (dispatch) => {\r\n  return dispatch({\r\n    type: ORDER_FAILED,\r\n    payload: errorMessage\r\n  });\r\n};\r\n\r\nexport const orderSuccess = () => (dispatch) => {\r\n  return dispatch({\r\n    type: ORDER_SUCCESS\r\n  });\r\n};\r\n\r\n\r\nexport const fetchOrdersFailed = (errorMessage) => (dispatch) => {\r\n  return dispatch({\r\n    type: FETCH_ORDERS_FAILED,\r\n    payload: errorMessage\r\n  });\r\n}\r\n\r\nexport const fetchOrdersSuccess = () => (dispatch) => {\r\n  return dispatch({\r\n    type: FETCH_ORDERS_SUCCESS\r\n  });\r\n}\r\n","export const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n\r\nexport const FETCH_PRODUCTS_SUCCESS = \"FETCH_PRODUCTS_SUCCESS\";\r\nexport const FETCH_PRODUCTS_FAIL = \"FETCH_PRODUCTS_FAIL\";\r\n\r\nexport const FETCH_FAVORITE_PRODUCTS_SUCCESS = \"FETCH_FAVORITE_PRODUCTS_SUCCESS\";\r\nexport const FETCH_FAVORITE_PRODUCTS_FAILED = \"FETCH_FAVORITE_PRODUCTS_FAILED\";\r\n\r\nexport const ADD_TO_FAVORITES_SUCCESS = \"ADD_TO_FAVORITES_SUCCESS\";\r\nexport const ADD_TO_FAVORITES_FAILED = \"ADD_TO_FAVORITES_FAILED\";\r\n\r\nexport const REMOVE_FROM_FAVORITES_SUCCESS = \"REMOVE_FROM_FAVORITES_SUCCESS\";\r\nexport const REMOVE_FROM_FAVORITES_FAILED = \"REMOVE_FROM_FAVORITES_FAILED\";\r\n\r\nexport const TOGGLE_VERIFYING_TOKEN = \"TOGGLE_VERIFYING_TOKEN\";\r\n\r\nexport const TOGGLE_IS_WORKING = \"TOGGLE_IS_WORKING\";\r\n\r\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\r\nexport const SIGNUP_ERROR = \"SIGNUP_ERROR\";\r\n\r\nexport const ORDER_SUCCESS = \"ORDER_SUCCESS\";\r\nexport const ORDER_FAILED = \"ORDER_FAILED\";\r\n\r\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\r\nexport const FETCH_ORDERS_FAILED = \"FETCH_ORDERS_FAILED\";\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport { logout } from \"../../store/actions/authActions\";\r\nimport { clientRoutes } from '../../routes';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass NavigationBar extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar bg=\"orange\" sticky=\"top\" style={{ background: \"orange\" }} expand=\"lg\">\r\n          <Navbar.Brand>Headless Products Page</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            {\r\n              this.props.isUserAuthenticated ?\r\n                (\r\n                  <Nav className=\"mr-auto\">\r\n                    <Link style={{ textDecoration: \"none\", color: \"white\" }} to={clientRoutes.ORDERS_ROUTE}> View Orders </Link>\r\n                  </Nav>\r\n                ) : (\r\n                  <Nav className=\"mr-auto\">\r\n                    <Nav.Link href={clientRoutes.LOGIN_ROUTE}>Login</Nav.Link>\r\n                    <Nav.Link href={clientRoutes.SIGNUP_ROUTE}>Signup</Nav.Link>\r\n                  </Nav>\r\n                )\r\n            }\r\n            <Nav className=\"ml-auto\">\r\n              {\r\n                this.props.isUserAuthenticated ?\r\n                  <Nav.Link onClick={() => this.props.logout()}>Logout</Nav.Link> : \"\"\r\n              }\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  isUserAuthenticated: state.auth.isUserAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(NavigationBar);\r\n","import {LOGIN_SUCCESS, LOGIN_FAILED, SIGNUP_FAILED, LOGOUT} from \"./types/authActionTypes\";\r\nimport { toggleVerifyingToken, loginError, toggleIsWorking, clearErrors, signupError } from \"./uiActions\";\r\nimport axios from \"axios\";\r\nimport { backendRoutes } from \"../../routes\";\r\n\r\nexport const verifyLogin = () => (dispatch) => {\r\n\tdispatch(toggleVerifyingToken());\r\n\r\n\tconst token = window.localStorage.getItem(\"userToken\");\r\n\r\n\tif (!token) {\r\n\t\tdispatch({\r\n      type: LOGIN_FAILED,\r\n    });\r\n\r\n    dispatch(loginError(null));\r\n\t\treturn dispatch(toggleVerifyingToken());\r\n\t}\r\n\r\n  axios.get(backendRoutes.TOKEN_VERIFY, \r\n    { \r\n      headers: {\r\n        Authorization: \"Bearer \" + token\r\n      } \r\n    }\r\n  )\r\n\t.then(response => {    \r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: token\r\n    });\r\n    return dispatch(toggleVerifyingToken());\r\n  })\r\n\t.catch(err => {\r\n\t\tif (err.response.status === 401) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: LOGIN_FAILED,\r\n\t\t\t});\r\n\r\n\t\t\tdispatch(loginError(null));\r\n\t\t\treturn dispatch(toggleVerifyingToken());\r\n\t\t}\r\n\r\n\t\tdispatch(loginError(\"Unknown error when communicating with the server.\"));\r\n\t\treturn dispatch(toggleVerifyingToken());\r\n\t});\r\n};\r\n\r\nexport const loginLocal = (email, password) => (dispatch) => {\r\n\tdispatch(toggleIsWorking());\r\n\t\r\n\taxios.post(backendRoutes.LOCAL_LOGIN, { email, password })\r\n\t\t.then(response => {\r\n\t\t\tconst { data } = response;\r\n\t\t\tconst { token } = data;\r\n\r\n\t\t\twindow.localStorage.setItem(\"userToken\", token);\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: LOGIN_SUCCESS,\r\n\t\t\t\tpayload: token\r\n\t\t\t});\r\n\r\n\t\t\treturn dispatch(toggleIsWorking());\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconst { messageType, messageBody } = err.response.data;\r\n\r\n\t\t\tif (messageType === \"error\") {\r\n\t\t\t\tdispatch(loginError(messageBody));\r\n\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: LOGIN_FAILED\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn dispatch(toggleIsWorking());\r\n\t\t\t}\r\n\r\n\t\t\tdispatch(loginError(\"Unknown error when communicating with the server.\"));\r\n\t\t\treturn dispatch(toggleIsWorking());\r\n\t\t});\r\n};\r\n\r\nexport const loginOauthSuccess = (token) => (dispatch) => {\r\n\twindow.localStorage.setItem(\"userToken\", token);\r\n\r\n\treturn dispatch({\r\n\t\ttype: LOGIN_SUCCESS,\r\n\t\tpayload: token\r\n\t});\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n\twindow.localStorage.removeItem(\"userToken\");\r\n\t\r\n\tdispatch({\r\n\t\ttype: LOGOUT\r\n\t});\r\n\r\n\treturn dispatch(clearErrors());\r\n};\r\n\r\n\r\nexport const signupLocal = (username, email, password) => (dispatch) => {\r\n\tdispatch(toggleIsWorking());\r\n\r\n\taxios.post(backendRoutes.LOCAL_SIGNUP, { username, email, password })\r\n\t\t.then(response => {\r\n\t\t\tconst { data } = response;\r\n\t\t\tconst { token } = data;\r\n\r\n\t\t\twindow.localStorage.setItem(\"userToken\", token);\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: LOGIN_SUCCESS,\r\n\t\t\t\tpayload: token\r\n\t\t\t});\r\n\r\n\t\t\treturn dispatch(toggleIsWorking());\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconst { messageType, messageBody } = err.response.data;\r\n\r\n\t\t\tif (messageType === \"error\") {\r\n\t\t\t\tdispatch(signupError(messageBody));\r\n\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: SIGNUP_FAILED\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn dispatch(toggleIsWorking());\r\n\t\t\t}\r\n\r\n\t\t\tdispatch(signupError(\"Unknown error when communicating with the server.\"));\r\n\t\t\treturn dispatch(toggleIsWorking());\r\n\t\t})\r\n}\r\n","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILED = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const SIGNUP_FAILED = \"SIGNUP_FAIL\";","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst FavoritesButton = (props) => {\r\n  return (\r\n    <Button\r\n      variant=\"primary\"\r\n      className=\"float-right\"\r\n      style={{\r\n        borderRadius: \"50%\",\r\n        background: \"orange\",\r\n        borderColor: \"orange\",\r\n        position: \"absolute\",\r\n        top: \"1rem\",\r\n        right: \"1rem\"\r\n      }}\r\n      onClick={props.onClick}\r\n    >\r\n      <FontAwesomeIcon icon={props.icon} />\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default FavoritesButton;","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst ShoppingCartButton = (props) => {\r\n  return (\r\n    <Button\r\n      variant=\"primary\"\r\n      className=\"float-right\"\r\n      style={{\r\n        borderRadius: \"50%\",\r\n        background: \"orange\",\r\n        borderColor: \"orange\"\r\n      }}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      <FontAwesomeIcon icon={[\"fas\", \"shopping-cart\"]} />\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default ShoppingCartButton;","import { ADD_TO_CART, REMOVE_FROM_CART, UPDATE_QUANTITY, CLEAR_CART } from './types/cartActionTypes';\r\n\r\n\r\nexport const addToCart = (productID) => (dispatch, getState) => {\r\n  const { products } = getState();\r\n  const { productsList } = products;\r\n\r\n  const productInfo = productsList.filter(product => product.productID === productID)[0];\r\n  \r\n  return dispatch({\r\n    type: ADD_TO_CART,\r\n    payload: productInfo\r\n  });\r\n}\r\n\r\nexport const removeFromCart = (productID) => (dispatch) => {\r\n  return dispatch({\r\n    type: REMOVE_FROM_CART,\r\n    payload: productID\r\n  });\r\n};\r\n\r\n\r\nexport const updateQuantity = (quantity, productID) => (dispatch) => {\r\n  return dispatch({\r\n    type: UPDATE_QUANTITY,\r\n    payload: {\r\n      quantity,\r\n      productID\r\n    }\r\n  });\r\n}\r\n\r\nexport const clearCart = () => (dispatch) => {\r\n  return dispatch({\r\n    type: CLEAR_CART\r\n  });\r\n}","export const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const UPDATE_QUANTITY = \"UPDATE_QUANTITY\";","import React, { Component } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FavoritesButton from \"../partials/FavoritesButton\";\r\nimport ShoppingCartButton from \"../partials/ShoppingCartButton\";\r\nimport { addToCart } from '../../store/actions/cartActions';\r\nimport { addToFavorites, removeFromFavorites } from '../../store/actions/productsActions';\r\n\r\n\r\nclass Product extends Component {\r\n  getQuantityText = (quantityType) => {\r\n    switch (quantityType) {\r\n      case \"weight\":\r\n        return \"1 kg\"\r\n      \r\n      case \"piece\":\r\n        return \"1 pc\"\r\n      \r\n      case \"dozen\":\r\n        return \"1 dozen\"\r\n      \r\n      default:\r\n        return \"1 kg\"\r\n    }\r\n  }\r\n\r\n  addToCart = (productID, event) => {\r\n    this.props.addToCart(productID);\r\n  }\r\n\r\n  toggleProductIsFavorited = (productID, isProductFavorited, event) => {\r\n    if (isProductFavorited) {\r\n      this.props.removeFromFavorites(productID);\r\n    } else {\r\n      this.props.addToFavorites(productID);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let shouldAddToCartButtonBeDisabled = false;\r\n    let isProductFavorited = false;\r\n    // if the product has loaded in the DOM and the cart has been fetched from the store\r\n    if (this.props.productID && this.props.cart) {\r\n      shouldAddToCartButtonBeDisabled = !(this.props.cart.findIndex(product => product.productID === this.props.productID) === -1);\r\n    }\r\n\r\n    if (this.props.favoritesList) {\r\n      isProductFavorited = !(this.props.favoritesList.findIndex(productID => productID === this.props.productID) === -1);\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card style={{ width: '15rem', margin: \"1rem\" }}>\r\n          <Card.Img variant=\"top\" src={this.props.productImage} />\r\n          {\r\n            isProductFavorited ? (\r\n              <FavoritesButton\r\n                onClick={this.toggleProductIsFavorited.bind(this, this.props.productID, isProductFavorited)}\r\n                icon={[\"fas\", \"heart\"]}\r\n              />\r\n              \r\n            ) :\r\n            <FavoritesButton\r\n              onClick={this.toggleProductIsFavorited.bind(this, this.props.productID, isProductFavorited)}\r\n              icon={[\"far\", \"heart\"]}  \r\n            />\r\n          }\r\n          <Card.Body>\r\n            <Card.Title>{this.props.productName}</Card.Title>\r\n            <Card.Text>\r\n              Quantity: {this.getQuantityText(this.props.quantityType)}\r\n            </Card.Text>\r\n            <Card.Title>Price: BDT {this.props.price}</Card.Title>\r\n            {\r\n              shouldAddToCartButtonBeDisabled ? (\r\n                <ShoppingCartButton disabled={true} onClick={this.addToCart.bind(this, this.props.productID)} />\r\n              ) : (\r\n                <ShoppingCartButton disabled={false} onClick={this.addToCart.bind(this, this.props.productID)} />\r\n              )\r\n            }\r\n          </Card.Body>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  cart: state.cart.cartProducts,\r\n  favoritesList: state.products.favoritesList\r\n});\r\n\r\nexport default connect(mapStateToProps, { addToCart, addToFavorites, removeFromFavorites })(Product);\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  FETCH_PRODUCTS,\r\n  FETCH_FAVORITE_PRODUCTS,\r\n  ADD_TO_FAVORITES,\r\n  REMOVE_FROM_FAVORITES,\r\n  PLACE_ORDER,\r\n  FETCH_ORDERS\r\n} from './types/productsActionTypes';\r\n\r\nimport {\r\n  fetchProductsFailed,\r\n  fetchProductsSucceeded,\r\n  fetchFavoriteProductsFailed,\r\n  fetchFavoriteProductsSucceeded,\r\n  addToFavoriteProductsSuccess,\r\n  addToFavoriteProductsFailed,\r\n  removeFromFavoriteProductsSuccess,\r\n  removeFromFavoriteProductsFailed,\r\n  toggleIsWorking,\r\n  orderFailed,\r\n  orderSuccess,\r\n  fetchOrdersFailed,\r\n  fetchOrdersSuccess\r\n} from './uiActions';\r\n\r\nimport { backendRoutes } from '../../routes';\r\n\r\nexport const fetchProducts = () => (dispatch, getState) => {\r\n  const { auth } = getState();\r\n  const { userToken } = auth;\r\n\r\n  dispatch(toggleIsWorking());\r\n\r\n  axios.get(backendRoutes.FETCH_PRODUCTS, \r\n    { \r\n      headers: {\r\n        Authorization: \"Bearer \" + userToken\r\n      } \r\n    })\r\n    .then(response => {\r\n      const { data } = response;\r\n      const { messageType, messageBody } = data;\r\n\r\n      switch (messageType) {\r\n        case \"error\":\r\n          dispatch(fetchProductsFailed(messageBody));\r\n          return dispatch(toggleIsWorking());\r\n        \r\n        case \"success\":\r\n          dispatch({\r\n            type: FETCH_PRODUCTS,\r\n            payload: messageBody\r\n          });\r\n\r\n          dispatch(fetchProductsSucceeded());\r\n          return dispatch(toggleIsWorking());\r\n        \r\n        default:\r\n          return dispatch(toggleIsWorking());\r\n      }\r\n    })\r\n    .catch(err => {\r\n      dispatch(fetchProductsFailed(\"Unknown error occured when communicating with the server\"));\r\n      return dispatch(toggleIsWorking());\r\n    });\r\n};\r\n\r\n\r\nexport const getFavoriteProducts = () => (dispatch, getState) => {\r\n  const { auth } = getState();\r\n  const { userToken } = auth;\r\n\r\n  dispatch(toggleIsWorking());\r\n\r\n  axios.get(backendRoutes.PRODUCT_FAVORITES,\r\n    {\r\n      headers: {\r\n        Authorization: \"Bearer \" + userToken\r\n      }\r\n    })\r\n    .then(response => {\r\n      const { data } = response;\r\n      const { messageType, messageBody } = data;\r\n\r\n      switch (messageType) {\r\n        case \"error\":\r\n          dispatch(fetchFavoriteProductsFailed(messageBody));\r\n          return dispatch(toggleIsWorking());\r\n\r\n        case \"success\":\r\n          dispatch({\r\n            type: FETCH_FAVORITE_PRODUCTS,\r\n            payload: messageBody.productIDs\r\n          });\r\n\r\n          dispatch(fetchFavoriteProductsSucceeded());\r\n          return dispatch(toggleIsWorking());\r\n\r\n        default:\r\n          return dispatch(toggleIsWorking());\r\n      }\r\n    })\r\n    .catch(err => {\r\n      dispatch(fetchFavoriteProductsFailed(\"Unknown error occured when communicating with the server\"));\r\n      return dispatch(toggleIsWorking());\r\n    });\r\n};\r\n\r\n\r\nexport const addToFavorites = (productID) => (dispatch, getState) => {\r\n  const { auth } = getState();\r\n  const { userToken } = auth;\r\n\r\n  dispatch(toggleIsWorking());\r\n\r\n  axios.post(backendRoutes.PRODUCT_FAVORITES,\r\n    {\r\n      productID: productID\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: \"Bearer \" + userToken\r\n      }\r\n    })\r\n    .then(response => {\r\n      const { data } = response;\r\n      const { messageType } = data;\r\n\r\n      switch (messageType) {\r\n        case \"error\":\r\n          const { messageBody } = data;\r\n          dispatch(addToFavoriteProductsFailed(messageBody));\r\n          return dispatch(toggleIsWorking());\r\n\r\n        case \"success\":\r\n          dispatch({\r\n            type: ADD_TO_FAVORITES,\r\n            payload: productID\r\n          });\r\n\r\n          dispatch(addToFavoriteProductsSuccess());\r\n          return dispatch(toggleIsWorking());\r\n\r\n        default:\r\n          return dispatch(toggleIsWorking());\r\n      }\r\n    })\r\n    .catch(err => {\r\n      dispatch(addToFavoriteProductsFailed(\"Unknown error occured when communicating with the server\"));\r\n      return dispatch(toggleIsWorking());\r\n    });\r\n};\r\n\r\n\r\nexport const removeFromFavorites = (productID) => (dispatch, getState) => {\r\n  const { auth } = getState();\r\n  const { userToken } = auth;\r\n\r\n  dispatch(toggleIsWorking());\r\n\r\n  axios.post(backendRoutes.UNFAVORITE_PRODUCT,\r\n    {\r\n      productID: productID\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: \"Bearer \" + userToken\r\n      }\r\n    })\r\n    .then(response => {\r\n      const { data } = response;\r\n      const { messageType } = data;\r\n\r\n      switch (messageType) {\r\n        case \"error\":\r\n          const { messageBody } = data;\r\n          dispatch(removeFromFavoriteProductsFailed(messageBody));\r\n          return dispatch(toggleIsWorking());\r\n\r\n        case \"success\":\r\n          dispatch({\r\n            type: REMOVE_FROM_FAVORITES,\r\n            payload: productID\r\n          });\r\n\r\n          dispatch(removeFromFavoriteProductsSuccess());\r\n          return dispatch(toggleIsWorking());\r\n\r\n        default:\r\n          return dispatch(toggleIsWorking());\r\n      }\r\n    })\r\n    .catch(err => {\r\n      dispatch(removeFromFavoriteProductsFailed(\"Unknown error occured when communicating with the server\"));\r\n      return dispatch(toggleIsWorking());\r\n    });\r\n};\r\n\r\nexport const placeOrder = (productsList) => (dispatch, getState) => {\r\n  const { auth } = getState();\r\n  const { userToken } = auth;\r\n\r\n  dispatch(toggleIsWorking());\r\n\r\n  axios.post(backendRoutes.PLACE_ORDER,\r\n    {\r\n      products: productsList\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: \"Bearer \" + userToken\r\n      }\r\n    })\r\n    .then(response => {\r\n      const { data } = response;\r\n      const { messageType, messageBody } = data;\r\n\r\n      switch (messageType) {\r\n        case \"error\":\r\n          dispatch(orderFailed(messageBody));\r\n          return dispatch(toggleIsWorking());\r\n\r\n        case \"success\":\r\n          dispatch({\r\n            type: PLACE_ORDER,\r\n            payload: messageBody\r\n          });\r\n\r\n          dispatch(orderSuccess());\r\n          return dispatch(toggleIsWorking());\r\n\r\n        default:\r\n          return dispatch(toggleIsWorking());\r\n      }\r\n    })\r\n    .catch(err => {\r\n      dispatch(orderFailed(\"Unknown error occured when communicating with the server\"));\r\n      return dispatch(toggleIsWorking());\r\n    });\r\n};\r\n\r\n\r\nexport const fetchOrders = () => (dispatch, getState) => {\r\n  const { auth } = getState();\r\n  const { userToken } = auth;\r\n\r\n  dispatch(toggleIsWorking());\r\n\r\n  axios.get(backendRoutes.FETCH_ORDERS, \r\n    { \r\n      headers: {\r\n        Authorization: \"Bearer \" + userToken\r\n      } \r\n    })\r\n    .then(response => {\r\n      const { data } = response;\r\n      const { messageType, messageBody } = data;\r\n\r\n      switch (messageType) {\r\n        case \"error\":\r\n          dispatch(fetchOrdersFailed(messageBody));\r\n          return dispatch(toggleIsWorking());\r\n        \r\n        case \"success\":\r\n          dispatch({\r\n            type: FETCH_ORDERS,\r\n            payload: messageBody\r\n          });\r\n\r\n          dispatch(fetchOrdersSuccess());\r\n          return dispatch(toggleIsWorking());\r\n        \r\n        default:\r\n          return dispatch(toggleIsWorking());\r\n      }\r\n    })\r\n    .catch(err => {\r\n      dispatch(fetchOrdersFailed(\"Unknown error occured when communicating with the server\"));\r\n      return dispatch(toggleIsWorking());\r\n    });\r\n}","export const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\r\nexport const FETCH_FAVORITE_PRODUCTS = \"FETCH_FAVORITE_PRODUCTS\";\r\nexport const ADD_TO_FAVORITES = \"ADD_TO_FAVORITES\";\r\nexport const REMOVE_FROM_FAVORITES = \"REMOVE_FROM_FAVORITES\";\r\nexport const FETCH_ORDERS = \"FETCH_ORDERS\";\r\nexport const PLACE_ORDER = \"PLACE_ORDER\";","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Product from './Product';\r\nimport { fetchProducts, getFavoriteProducts } from '../../store/actions/productsActions';\r\n\r\nclass Products extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchProducts();\r\n    this.props.getFavoriteProducts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <React.Fragment>\r\n          {\r\n            this.props.products ? (\r\n              this.props.products.map(product => (\r\n                <Product\r\n                  className=\"col-3\"\r\n                  key={product.productID}\r\n                  productID={product.productID}\r\n                  quantityType={product.quantityType}\r\n                  productName={product.name}\r\n                  price={product.price}\r\n                  productImage={product.imageURL}\r\n                />\r\n              ))\r\n            ) : \"\"  \r\n          }\r\n        </React.Fragment>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  products: state.products.productsList,\r\n  isVerifyingToken: state.ui.isVerifyingToken\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchProducts, getFavoriteProducts })(Products);\r\n","import React, { Component } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { removeFromCart, updateQuantity } from '../../store/actions/cartActions';\r\n\r\nclass CartProduct extends Component {\r\n  onClickRemoveFromCart = (productID, event) => {\r\n    this.props.removeFromCart(productID);\r\n  }\r\n\r\n  handleUpdateQuantityClick = (productID, event) => {\r\n    switch (event.target.name) {\r\n      case \"increment\":\r\n        return this.props.updateQuantity(1, productID);\r\n      \r\n      case \"decrement\":\r\n        return this.props.updateQuantity(-1, productID);\r\n      \r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img\r\n          alt=\"wat\"\r\n          src={this.props.productImage}\r\n          width=\"15%\"\r\n          height=\"15%\"\r\n          style={{\r\n            display: \"inline-block\",\r\n            marginRight: \"0.5rem\"\r\n          }}\r\n        >\r\n        </img>\r\n\r\n        <p style={{ display: \"inline-block\", fontSize: \"0.9em\", width: \"3rem\", marginRight: \"2rem\", marginTop: \"1rem\", wordWrap: \"break-word\" }}>{this.props.productName}</p>\r\n        \r\n        <Form.Group style={{ display: \"inline-block\" }}>\r\n          <Button variant=\"sm\" name=\"increment\" onClick={this.handleUpdateQuantityClick.bind(this, this.props.productID)}>+</Button>\r\n          <Form.Control size=\"sm\" type=\"text\" style={{\r\n            width: \"3rem\",\r\n            display: \"inline-block\"\r\n          }} value={this.props.quantity}\r\n          readOnly/>          \r\n          <Button variant=\"sm\" name=\"decrement\" onClick={this.handleUpdateQuantityClick.bind(this, this.props.productID)}>-</Button>\r\n        </Form.Group>\r\n\r\n        <p style={{ display: \"inline-block\", marginLeft: \"0.5rem\", marginTop: \"0.5rem\" }}>Price: {this.props.quantity * this.props.price}</p>\r\n        \r\n        <Button\r\n          variant=\"danger lg\"\r\n          className=\"float-right\"\r\n          style={{ position: \"relative\", marginTop: \"0.5rem\", borderRadius: \"50%\", marginLeft: \"0.5rem\" }}\r\n          onClick={this.onClickRemoveFromCart.bind(this, this.props.productID)}\r\n        >\r\n          <FontAwesomeIcon icon=\"ban\" />\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, { removeFromCart, updateQuantity })(CartProduct);\r\n","import React, { Component } from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport CartProduct from './CartProduct';\r\nimport { removeFromCart, clearCart } from \"../../store/actions/cartActions\";\r\n\r\nimport { clientRoutes } from \"../../routes\";\r\n\r\n\r\nclass Cart extends Component {\r\n  placeOrder = () => {\r\n    if (this.props.cart.length > 0) {\r\n      this.props.history.push(clientRoutes.ORDER_ROUTE);\r\n    }\r\n  }\r\n\r\n  clearCartProducts = () => {\r\n    this.props.clearCart();\r\n  }\r\n\r\n  render() {\r\n    let grandTotalPrice = 0;\r\n\r\n    if (this.props.cart && this.props.cart.length > 0) {\r\n      this.props.cart.forEach(cartProduct => {\r\n        grandTotalPrice += cartProduct.price * cartProduct.quantity;\r\n      });\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card style={{ width: '28rem', height: \"50rem\", marginTop: \"1rem\", marginLeft: \"-1.5rem\" }}>\r\n          <Card.Header>\r\n            Your Cart\r\n            <FontAwesomeIcon onClick={this.clearCartProducts} icon=\"trash-alt\" style={{ cursor: \"pointer\", float: \"right\", width: \"1.5rem\", height: \"1.5rem\" }}/>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            {\r\n              (this.props.cart.length > 0) ? (\r\n                this.props.cart.map(cartProduct => (\r\n                  <CartProduct\r\n                    key={cartProduct.productID}\r\n                    productID={cartProduct.productID}\r\n                    productImage={cartProduct.imageURL}\r\n                    productName={cartProduct.name}\r\n                    price={cartProduct.price}\r\n                    quantity={cartProduct.quantity}\r\n                  />\r\n                ))\r\n              ) : \"You don't have any items in the cart\"\r\n            }\r\n          </Card.Body>\r\n\r\n          <Button\r\n            variant=\"primary\"\r\n            style={{\r\n              width: \"40%\",\r\n              background: \"orange\",\r\n              borderColor: \"orange\",\r\n              position: \"absolute\",\r\n              bottom: \"1.5rem\",\r\n              left: \"1rem\"\r\n            }}\r\n            onClick={this.placeOrder}\r\n          >\r\n            Place Order\r\n          </Button>\r\n\r\n          <h5 style={{\r\n            position: \"absolute\",\r\n            left: \"13.5rem\",\r\n            bottom: \"1.5rem\",\r\n            fontSize: \"1.1rem\"\r\n          }}>\r\n            Grand Total: BDT {grandTotalPrice.toFixed(2)}\r\n          </h5>        \r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  cart: state.cart.cartProducts\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { removeFromCart, clearCart }),\r\n  withRouter\r\n)(Cart);","import React from \"react\";\nimport { Alert, Spinner } from \"react-bootstrap\";\n\n\nconst AlertMessage = (props) => {\n\treturn (\n\t\t<Alert style={{ marginTop: \"1rem\", width: \"100%\", display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }} variant={props.variant}>\n\t\t\t{\n\t\t\t\tprops.useSpinner ? (<Spinner style={{ display: \"inline-block\", marginRight: \"2rem\" }} animation=\"border\" role=\"status\" variant=\"sm\" />) : \"\"\n\t\t\t}\t\t\n\t\t\t{props.message}\n  \t</Alert>\n\t);\n}\n\nexport default AlertMessage;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Products from '../partials/Products';\r\nimport Cart from '../partials/Cart';\r\nimport AlertMessage from '../partials/AlertMessage';\r\n\r\nclass ProductsPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row\" style={{ marginTop: \"2rem\" }}>\r\n        <div className=\"col-9\">          \r\n          {\r\n            this.props.isWorking ? (\r\n              <React.Fragment>\r\n                <AlertMessage style={{ display: \"inline-block\" }} variant=\"info\" message=\"Working, please wait...\" useSpinner={true} />\r\n              </React.Fragment>\r\n            ) : \"\"\r\n          }\r\n          <Products />\r\n        </div>\r\n        <div className=\"col-3\">\r\n          <Cart />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  isWorking: state.ui.isWorking\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(ProductsPage);\r\n","import React, { Component } from 'react';\r\nimport { Card, Form, Button, Spinner } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { loginLocal, loginOauthSuccess } from \"../../store/actions/authActions\";\r\nimport { loginError } from \"../../store/actions/uiActions\";\r\nimport AlertMessage from \"../partials/AlertMessage\";\r\n\r\nimport { clientRoutes, backendRoutes } from \"../../routes\";\r\n\r\nclass LoginPage extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\temail: \"\",\r\n\t\t\tpassword: \"\"\r\n\t\t}\r\n\t}\r\n\r\n\tonGoogleLoginClick = () => {\r\n\t\twindow.open(backendRoutes.GOOGLE_OAUTH_LOGIN, \"_self\");\r\n\t}\r\n\r\n\tonLoginClick = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst { email, password } = this.state;\r\n\r\n\t\t// validate\r\n\t\tif (email === \"\" || password === \"\") {\r\n\t\t\treturn this.props.loginError(\"Please fill in all the fields!\");\r\n\t\t}\r\n\t\t\r\n\t\tthis.props.loginLocal(email, password);\r\n\t}\r\n\r\n\tonHandleTextFieldChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\t[event.target.name]: event.target.value\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tif(this.props.match.params.data) {\r\n\t\t\tlet messagesArray = this.props.match.params.data.split(\"&\");\r\n\r\n\t\t\tlet messageType = messagesArray[0].split(\"=\")[1];\r\n\r\n\t\t\tif (messageType === \"error\") {\r\n\t\t\t\tthis.props.loginError(messagesArray[1].split(\"=\")[1]);\r\n\t\t\t\tthis.props.history.push(clientRoutes.LOGIN_ROUTE);\r\n\t\t\t} else {\r\n\t\t\t\tlet token = messagesArray[1].split(\"=\")[1];\r\n\t\t\t\tthis.props.loginOauthSuccess(token);\r\n\t\t\t\tthis.props.history.push(clientRoutes.PRODUCTS_ROUTE);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Card style={{ marginTop: \"2rem\", width: \"30rem\", display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.props.loginErrorState.error && this.props.loginErrorState.errorMessage ? (\r\n\t\t\t\t\t\t\t<AlertMessage variant=\"danger\" message={this.props.loginErrorState.errorMessage} />\r\n\t\t\t\t\t\t) : \"\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<Card.Header>\r\n\t\t\t\t\t\t<h1 style={{textAlign: \"center\"}}>Login</h1>\r\n\t\t\t\t\t</Card.Header>\r\n\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t  <Form.Group controlId=\"formBasicEmail\">\r\n\t\t\t\t\t\t    <Form.Label>Email address</Form.Label>\r\n\t\t\t\t\t\t    <Form.Control onChange={this.onHandleTextFieldChange} type=\"email\" name=\"email\" placeholder=\"e.g. myawesome.email@gmail.com\" />\r\n\t\t\t\t\t\t  </Form.Group>\r\n\r\n\t\t\t\t\t\t  <Form.Group controlId=\"formBasicPassword\">\r\n\t\t\t\t\t\t    <Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t    <Form.Control onChange={this.onHandleTextFieldChange} type=\"password\" name=\"password\" placeholder=\"Your Secure Password\" />\r\n\t\t\t\t\t\t  </Form.Group>\r\n\r\n\t\t\t\t\t\t  <Button style={{ display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", background: \"orange\", borderColor: \"orange\" }} variant=\"primary\" type=\"submit\" onClick={this.onLoginClick}>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tthis.props.isWorking ? (\r\n\t\t\t\t\t\t\t\t\t\t<Spinner animation=\"border\" role=\"status\" size=\"sm\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"sr-only\">Please Wait</span>\r\n\t\t\t\t\t\t\t\t\t\t</Spinner>\r\n\t\t\t\t\t\t\t\t\t) : \"Login\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t<p className=\"text mt-4\" style={{ textAlign: \"center\" }}>Alternatively, you can sign in using one of the following providers: </p>\r\n\t\t\t\t\t\t<Button style={{ background: \"red\", borderColor: \"red\", display: \"block\", marginTop: \"2rem\", marginLeft: \"auto\", marginRight: \"auto\" }} onClick={this.onGoogleLoginClick}> \r\n\t\t\t\t\t\t\t<FontAwesomeIcon className=\"mr-3\" icon={[\"fab\", \"google\"]}></FontAwesomeIcon>\r\n\t\t\t\t\t\t\tLogin With Google \r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n\tloginErrorState: state.ui.login,\r\n\tisWorking: state.ui.isWorking\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginLocal, loginOauthSuccess, loginError })(LoginPage);","import React, { Component } from 'react'\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { placeOrder } from '../../store/actions/productsActions';\r\nimport { clearCart } from '../../store/actions/cartActions';\r\nimport { clearErrors } from '../../store/actions/uiActions';\r\nimport AlertMessage from '../partials/AlertMessage';\r\nimport { clientRoutes } from \"../../routes\";\r\n\r\n\r\nclass OrderPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      redirect: false\r\n    };\r\n  }\r\n\r\n  handlePlaceOrder = () => {\r\n    const cartProducts  = this.props.cart;\r\n    let productsList = [];\r\n\r\n    for (let i = 0; i < cartProducts.length; i++) {\r\n      const product = cartProducts[i];\r\n      const newProduct = {\r\n        productID: product.productID,\r\n        price: product.price,\r\n        quantity: product.quantity\r\n      }\r\n\r\n      productsList.push(newProduct);\r\n    }\r\n\r\n    this.props.placeOrder(productsList);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.order.success) {\r\n      this.timer = setTimeout(() => {\r\n        this.props.clearCart();\r\n        this.props.clearErrors();\r\n        this.props.history.push(clientRoutes.PRODUCTS_ROUTE)\r\n      }, 5000);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.timer);\r\n  }\r\n\r\n  render() {\r\n    let totalPrice = 0;\r\n\r\n    if (this.props.cart) {\r\n      this.props.cart.forEach(product => {\r\n        totalPrice += product.quantity * product.price;\r\n      });\r\n    }      \r\n\r\n    return (      \r\n      <div>\r\n        <Link to=\"/\">\r\n          <FontAwesomeIcon style={{ marginTop: \"2rem\", width: \"2rem\", height: \"2rem\" }} icon=\"arrow-circle-left\"></FontAwesomeIcon>\r\n          {' '} <h3 style={{ display: \"inline-block\" }}>Back to products page</h3>\r\n        </Link>\r\n        {\r\n          this.props.order && this.props.order.errorMessage ? (\r\n            <AlertMessage variant=\"danger\" message={this.props.order.errorMessage} />\r\n          ) : \"\"\r\n        }\r\n        {\r\n          this.props.order && this.props.order.success ? (\r\n            <AlertMessage variant=\"success\" message=\"Order placed succssfully. Redirecting you in 5 seconds.\" />\r\n          ) : \"\"\r\n        }\r\n        <h1 style={{ display: \"block\", marginTop: \"2rem\", marginLeft: \"auto\", marginRight: \"auto\" }}>Confirm your order</h1>\r\n        <Table striped bordered hover className=\"mt-4\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Product Name</th>\r\n              <th>Unit Price (BDT.)</th>\r\n              <th>Quantity</th>\r\n              <th>Total Price (BDT.)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              !this.props.cart ? \"\" : (\r\n                this.props.cart.map((cartProduct, index) => (\r\n                  <tr key={cartProduct.productID}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{cartProduct.name}</td>\r\n                    <td>{parseFloat(cartProduct.price).toFixed(2)}</td>\r\n                    <td>{cartProduct.quantity}</td>\r\n                    <td>{parseFloat(cartProduct.price * cartProduct.quantity).toFixed(2)}</td>\r\n                  </tr>\r\n                ))\r\n              )\r\n            }\r\n            {\r\n              !this.props.cart ? \"\" : (\r\n                <tr style={{ fontWeight: \"bold\" }}>\r\n                  <td colSpan=\"4\"> Total </td>\r\n                  <td>BDT. {parseFloat(totalPrice).toFixed(2)}</td>\r\n                </tr>\r\n              )\r\n            }\r\n          </tbody>\r\n        </Table>\r\n        \r\n        {\r\n          this.props.isWorking || this.props.order.success ? (\r\n            <Button onClick={this.handlePlaceOrder} variant=\"primary\" style={{ backgroundColor: \"orange\", borderColor: \"orange\" }} disabled>\r\n              Place Order\r\n            </Button>\r\n          ) : \r\n          (\r\n            <Button onClick={this.handlePlaceOrder} variant=\"primary\" style={{ backgroundColor: \"orange\", borderColor: \"orange\" }}>\r\n              Place Order\r\n            </Button> \r\n          )\r\n        }   \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  cart: state.cart.cartProducts,\r\n  order: state.ui.order,\r\n  isWorking: state.ui.isWorking\r\n});\r\n\r\nexport default connect(mapStateToProps, { placeOrder, clearCart, clearErrors })(OrderPage);","import React, { Component } from 'react';\r\nimport { Card, Form, Button, Spinner } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { signupLocal } from \"../../store/actions/authActions\";\r\nimport { signupError } from \"../../store/actions/uiActions\";\r\nimport AlertMessage from \"../partials/AlertMessage\";\r\nimport { backendRoutes } from \"../../routes\";\r\n\r\n\r\nclass SignupPage extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\temail: \"\",\r\n\t\t\tusername: \"\",\r\n\t\t\tpassword: \"\"\r\n\t\t}\r\n\t}\r\n\r\n\tonGoogleLoginClick = () => {\r\n\t\twindow.open(backendRoutes.GOOGLE_OAUTH_LOGIN, \"_self\");\r\n\t}\r\n\r\n\tonSignupClick = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst { email, password, username } = this.state;\r\n\r\n\t\tif (email === \"\" || password === \"\" || username === \"\") {\r\n\t\t\treturn this.props.signupError(\"Please fill in all the required fields!\");\r\n\t\t}\r\n\r\n\t\tif (password.length < 6) {\r\n\t\t\treturn this.props.signupError(\"Password must be at least 6 characters long!\");\r\n\t\t}\r\n\r\n\t\tif (username.length < 4) {\r\n\t\t\treturn this.props.signupError(\"Username must be at least 4 characters long!\");\r\n\t\t}\r\n\r\n\t\tif (!/^[a-zA-Z0-9_]+$/.test(username)) {\r\n\t\t\treturn this.props.signupError(\"Username can only contain alphabets, numbers and underscores!\");\r\n\t\t}\r\n\r\n\t\tif (!/^[a-zA-Z0-9_.]+@[a-z]+\\.[a-z]+$/.test(email)) {\r\n\t\t\treturn this.props.signupError(\"Invalid email\");\r\n\t\t}\r\n\r\n\t\tif (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/.test(password)) {\r\n\t\t\treturn this.props.signupError(\"Passwords must be a combination of uppercase letters, lowercase letters and numbers\");\r\n\t\t}\r\n\r\n\t\tthis.props.signupLocal(username, email, password);\r\n\t}\r\n\r\n\tonHandleTextFieldChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\t[event.target.name]: event.target.value\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Card style={{ marginTop: \"2rem\", width: \"30rem\", display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.props.signupErrorState.error && this.props.signupErrorState.errorMessage ? (\r\n\t\t\t\t\t\t\t<AlertMessage variant=\"danger\" message={this.props.signupErrorState.errorMessage} />\r\n\t\t\t\t\t\t) : \"\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<Card.Header>\r\n\t\t\t\t\t\t<h1 style={{textAlign: \"center\"}}>Sign Up</h1>\r\n\t\t\t\t\t</Card.Header>\r\n\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<Form.Group controlId=\"formBasicUsername\">\r\n\t\t\t\t\t\t\t\t<Form.Label>Username</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control onChange={this.onHandleTextFieldChange} type=\"text\" name=\"username\" placeholder=\"e.g. myawesome_name\" />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t  <Form.Group controlId=\"formBasicEmail\">\r\n\t\t\t\t\t\t    <Form.Label>Email address</Form.Label>\r\n\t\t\t\t\t\t    <Form.Control onChange={this.onHandleTextFieldChange} type=\"email\" name=\"email\" placeholder=\"e.g. myawesome.email@gmail.com\" />\r\n\t\t\t\t\t\t  </Form.Group>\r\n\r\n\t\t\t\t\t\t  <Form.Group controlId=\"formBasicPassword\">\r\n\t\t\t\t\t\t    <Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t    <Form.Control onChange={this.onHandleTextFieldChange} type=\"password\" name=\"password\" placeholder=\"Your Secure Password\" />\r\n\t\t\t\t\t\t  </Form.Group>\r\n\r\n\t\t\t\t\t\t  <Button style={{ display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", background: \"orange\", borderColor: \"orange\" }} variant=\"primary\" type=\"submit\" onClick={this.onSignupClick}>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tthis.props.isWorking ? (\r\n\t\t\t\t\t\t\t\t\t\t<Spinner animation=\"border\" role=\"status\" size=\"sm\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"sr-only\">Please Wait</span>\r\n\t\t\t\t\t\t\t\t\t\t</Spinner>\r\n\t\t\t\t\t\t\t\t\t) : \"Sign Up\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t  </Button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t<p className=\"text mt-4\" style={{ textAlign: \"center\" }}>Alternatively, you can sign in using one of the following providers: </p>\r\n\t\t\t\t\t\t<Button style={{ background: \"red\", borderColor: \"red\", display: \"block\", marginTop: \"2rem\", marginLeft: \"auto\", marginRight: \"auto\" }} onClick={this.onGoogleLoginClick}> \r\n\t\t\t\t\t\t\t<FontAwesomeIcon className=\"mr-3\" icon={[\"fab\", \"google\"]}></FontAwesomeIcon>\r\n\t\t\t\t\t\t\tLogin With Google \r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n\tsignupErrorState: state.ui.signup,\r\n\tisWorking: state.ui.isWorking\r\n});\r\n\r\nexport default connect(mapStateToProps, { signupLocal, signupError })(SignupPage);","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Table } from 'react-bootstrap';\r\nimport { fetchOrders } from '../../store/actions/productsActions';\r\nimport AlertMessage from '../partials/AlertMessage';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass OrdersPage extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchOrders();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Link to=\"/\">\r\n          <FontAwesomeIcon style={{ marginTop: \"2rem\", width: \"2rem\", height: \"2rem\" }} icon=\"arrow-circle-left\"></FontAwesomeIcon>\r\n          {' '} <h3 style={{ display: \"inline-block\" }}>Back to products page</h3>\r\n        </Link>\r\n        {\r\n          this.props.isWorking ? (\r\n            <AlertMessage variant=\"info\" message=\"Loading orders...\" useSpinner={true} />\r\n          ) : \"\"\r\n        }\r\n        <Table striped bordered hover className=\"mt-4\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Order ID</th>\r\n              <th>Created At</th>\r\n              <th>Total Price (BDT.)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {              \r\n              this.props.orders ? (\r\n                this.props.orders.map((order, index) => (\r\n                  <tr key={index}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{order.orderID}</td>\r\n                    <td>{new Date(order.createdAt).toLocaleDateString()}</td>\r\n                    <td>{order.totalAmount}</td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                  <tr>\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td></td>\r\n                  </tr>\r\n                )\r\n            }\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  orders: state.products.ordersList,\r\n  isWorking: state.ui.isWorking\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchOrders })(OrdersPage);\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction ErrorPage() {\r\n  return (\r\n    <div className=\"mt-4\" style={{ display: \"inline-block\", marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n      <h1>The page was not found.</h1>\r\n      <Link to=\"/\">\r\n        <FontAwesomeIcon style={{ marginTop: \"2rem\", width: \"2rem\", height: \"2rem\" }} icon=\"arrow-circle-left\"></FontAwesomeIcon>\r\n        {' '} <h3 style={{ display: \"inline-block\" }}>Back to products page</h3>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorPage;\r\n","import React, { Component } from \"react\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { clientRoutes } from \"../../routes\";\n\nfunction isAuthenticated (WrappedComponent) {\n\treturn class EnhancedComponent extends Component {\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.props.isUserAuthenticated ? \n\t\t\t\t\t\t<WrappedComponent {...this.props} /> : \n\t\t\t\t\t\t<Redirect to={clientRoutes.LOGIN_ROUTE} />\n\t\t\t\t\t}\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t}\n\t}\n}\n\nconst mapStateToProps = (state, props) => ({\n\tisUserAuthenticated: state.auth.isUserAuthenticated\n});\n\nexport default compose(\n\tconnect(mapStateToProps, {}), \n\tisAuthenticated\n);","import React, { Component } from \"react\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { clientRoutes } from \"../../routes\";\n\nfunction isNotAuthenticated (WrappedComponent) {\n\treturn class EnhancedComponent extends Component {\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t{\n\t\t\t\t\t\t!this.props.isUserAuthenticated ? \n\t\t\t\t\t\t<WrappedComponent {...this.props} /> : \n\t\t\t\t\t\t<Redirect to={clientRoutes.PRODUCTS_ROUTE} />\n\t\t\t\t\t}\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t}\n\t}\n}\n\nconst mapStateToProps = (state, props) => ({\n\tisUserAuthenticated: state.auth.isUserAuthenticated\n});\n\nexport default compose(\n\tconnect(mapStateToProps, {}), \n\tisNotAuthenticated\n);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Container } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport { clientRoutes } from \"./routes\";\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas, faShoppingCart, faHeart as faSolidHeart, faBan, faArrowAltCircleLeft, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { fab, faGoogle } from '@fortawesome/free-brands-svg-icons';\nimport { far, faHeart as faRegularHeart } from \"@fortawesome/free-regular-svg-icons\";\n\nimport NavigationBar from './components/partials/NavigationBar';\nimport ProductsPage from './components/pages/ProductsPage';\nimport LoginPage from \"./components/pages/LoginPage\";\nimport OrderPage from './components/pages/OrderPage';\nimport SignupPage from './components/pages/SignupPage';\nimport OrdersPage from './components/pages/OrdersPage';\nimport ErrorPage from \"./components/pages/404Page\";\n\nimport isAuthenticated from \"./components/hoc/isAuthenticated\";\nimport isNotAuthenticated from \"./components/hoc/isNotAuthenticated\";\n\nlibrary.add(fas, far, fab, faGoogle, faSolidHeart, faRegularHeart, faShoppingCart, faBan, faArrowAltCircleLeft, faTrashAlt);\n\nclass App extends Component {\n  render() {\n    return this.props.isVerifyingToken ? null : (\n      <div> \n        <Router>\n          <NavigationBar /> \n          <Container>          \n            <Switch>\n              <Route exact path={clientRoutes.LOGIN_ROUTE} component={isNotAuthenticated(LoginPage)} />\n              <Route exact path={clientRoutes.LOGIN_FAILURE_ROUTE} component={isNotAuthenticated(LoginPage)} />\n              <Route exact path={clientRoutes.LOGIN_SUCCESS_ROUTE} component={isNotAuthenticated(LoginPage)} />\n\n              <Route exact path={clientRoutes.SIGNUP_ROUTE} component={isNotAuthenticated(SignupPage)} />\n\n              <Route exact path={clientRoutes.ORDER_ROUTE} component={isAuthenticated(OrderPage)} />\n              <Route exact path={clientRoutes.ORDERS_ROUTE} component={isAuthenticated(OrdersPage)} />\n\n              <Route exact path={clientRoutes.PRODUCTS_ROUTE} component={isAuthenticated(ProductsPage)} />\n\n              <Route component={ErrorPage} />\n            </Switch>\n          </Container>\n        </Router>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => ({\n  isVerifyingToken: state.ui.isVerifyingToken\n});\n\nexport default connect(mapStateToProps, {})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  FETCH_PRODUCTS,\r\n  FETCH_FAVORITE_PRODUCTS,\r\n  ADD_TO_FAVORITES,\r\n  REMOVE_FROM_FAVORITES,\r\n  PLACE_ORDER,\r\n  FETCH_ORDERS\r\n} from '../actions/types/productsActionTypes';\r\n\r\nconst initialState = {\r\n  productsList: null,\r\n  favoritesList: null,\r\n  ordersList: null,\r\n  latestOrder: null\r\n};\r\n\r\nconst productsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        productsList: action.payload\r\n      };\r\n    \r\n    case FETCH_FAVORITE_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        favoritesList: action.payload\r\n      }\r\n    \r\n    case ADD_TO_FAVORITES:\r\n      return {\r\n        ...state,\r\n        favoritesList: [\r\n          ...state.favoritesList,\r\n          action.payload\r\n        ]\r\n      };\r\n    \r\n    case REMOVE_FROM_FAVORITES:\r\n      return {\r\n        ...state,\r\n        favoritesList: state.favoritesList.filter(productID => productID !== action.payload)\r\n      };\r\n    \r\n    case PLACE_ORDER:\r\n      return {\r\n        ...state,\r\n        latestOrder: action.payload\r\n      }\r\n    \r\n    case FETCH_ORDERS:\r\n      return {\r\n        ...state,\r\n        ordersList: action.payload\r\n      }\r\n  \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default productsReducer;","import { \r\n  FETCH_PRODUCTS_SUCCESS, \r\n  FETCH_PRODUCTS_FAIL, \r\n  CLEAR_ERRORS, \r\n  TOGGLE_VERIFYING_TOKEN,\r\n  LOGIN_ERROR,\r\n  SIGNUP_ERROR,\r\n  FETCH_FAVORITE_PRODUCTS_FAILED,\r\n  FETCH_FAVORITE_PRODUCTS_SUCCESS,\r\n  ADD_TO_FAVORITES_FAILED,\r\n  ADD_TO_FAVORITES_SUCCESS,\r\n  REMOVE_FROM_FAVORITES_FAILED,\r\n  REMOVE_FROM_FAVORITES_SUCCESS,\r\n  TOGGLE_IS_WORKING,\r\n  ORDER_FAILED,\r\n  ORDER_SUCCESS,\r\n  FETCH_ORDERS_FAILED,\r\n  FETCH_ORDERS_SUCCESS\r\n} from '../actions/types/uiActionTypes';\r\n\r\nconst initialState = {\r\n  fetchProducts: {\r\n    error: false,\r\n    errorMessage: null\r\n  },\r\n  fetchFavoriteProducts: {\r\n    error: false,\r\n    errorMessage: null\r\n  },\r\n  fetchOrders: {\r\n    error: false,\r\n    errorMessage: null\r\n  },\r\n  addToFavorites: {\r\n    error: false,\r\n    errorMessage: null\r\n  },\r\n  removeFromFavorites: {\r\n    error: false,\r\n    errorMessage: null\r\n  },\r\n  login: {\r\n    error: false,\r\n    errorMessage: null\r\n  },\r\n  signup: {\r\n    error: false,\r\n    errorMessage: null\r\n  },\r\n  order: {\r\n    success: false,\r\n    error: false,\r\n    errorMessage: null\r\n  },\r\n  isVerifyingToken: false,\r\n  isWorking: false\r\n};\r\n\r\n\r\nconst uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_IS_WORKING:\r\n      return {\r\n        ...state,\r\n        isWorking: !state.isWorking\r\n      }\r\n    \r\n    case FETCH_PRODUCTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        fetchProducts: {\r\n          error: false,\r\n          errorMessage: null\r\n        }  \r\n      }\r\n    \r\n    case FETCH_PRODUCTS_FAIL:\r\n      return {\r\n        ...state,\r\n        fetchProducts: {\r\n          error: true,\r\n          errorMessage: action.payload\r\n        }        \r\n      }\r\n    \r\n    case FETCH_FAVORITE_PRODUCTS_FAILED:\r\n      return {\r\n        ...state,\r\n        fetchFavoriteProducts: {\r\n          error: true,\r\n          errorMessage: action.payload\r\n        }\r\n      };\r\n    \r\n    case FETCH_FAVORITE_PRODUCTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        fetchFavoriteProducts: {\r\n          error: false,\r\n          errorMessage: null\r\n        }\r\n      };\r\n    \r\n    case ADD_TO_FAVORITES_FAILED:\r\n      return {\r\n        ...state,\r\n        addToFavorites: {\r\n          error: true,\r\n          errorMessage: action.payload\r\n        }\r\n      }\r\n    \r\n    case ADD_TO_FAVORITES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        addToFavorites: {\r\n          error: false,\r\n          errorMessage: null\r\n        }\r\n      }\r\n    \r\n    case REMOVE_FROM_FAVORITES_FAILED:\r\n      return {\r\n        ...state,\r\n        removeFromFavorites: {\r\n          error: true,\r\n          errorMessage: action.payload\r\n        }\r\n      }\r\n      \r\n    case REMOVE_FROM_FAVORITES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        removeFromFavorites: {\r\n          error: false,\r\n          errorMessage: null\r\n        },\r\n      }\r\n        \r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        fetchProducts: {\r\n          error: false,\r\n          errorMessage: null\r\n        },\r\n        addToFavorites: {\r\n          error: false,\r\n          errorMessage: null\r\n        },\r\n        fetchOrders: {\r\n          error: false,\r\n          errorMessage: null\r\n        },\r\n        removeFromFavorites: {\r\n          error: false,\r\n          errorMessage: null\r\n        },\r\n        login: {\r\n          error: false,\r\n          errorMessage: null\r\n        },\r\n        signup: {\r\n          error: false,\r\n          errorMessage: null\r\n        },\r\n        fetchFavoriteProducts: {\r\n          error: false,\r\n          errorMessage: null\r\n        },\r\n        order: {\r\n          success: false,\r\n          error: false,\r\n          errorMessage: null\r\n        }\r\n      }\r\n    \r\n    case LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        login: {\r\n          error: true,\r\n          errorMessage: action.payload\r\n        }\r\n      };\r\n\r\n    case SIGNUP_ERROR:\r\n      return {\r\n        ...state,\r\n        signup: {\r\n          error: true,\r\n          errorMessage: action.payload\r\n        }\r\n      };\r\n    \r\n    case ORDER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        order: {\r\n          success: true,\r\n          error: false,\r\n          errorMessage: null\r\n        }\r\n      };\r\n    \r\n    case ORDER_FAILED:\r\n      return {\r\n        ...state,\r\n        order: {\r\n          success: false,\r\n          error: true,\r\n          errorMessage: action.payload\r\n        }\r\n      };\r\n    \r\n    case FETCH_ORDERS_FAILED:\r\n      return {\r\n        ...state,\r\n        fetchOrders: {\r\n          error: true,\r\n          errorMessage: action.payload\r\n        }\r\n      };\r\n    \r\n    case FETCH_ORDERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        fetchOrders: {\r\n          error: false,\r\n          errorMessage: true\r\n        }\r\n      };\r\n\r\n    case TOGGLE_VERIFYING_TOKEN:\r\n      return {\r\n        ...state,\r\n        isVerifyingToken: !state.isVerifyingToken\r\n      }\r\n        \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default uiReducer;","import { ADD_TO_CART, REMOVE_FROM_CART, UPDATE_QUANTITY, CLEAR_CART } from '../actions/types/cartActionTypes';\r\n\r\nconst initialState = {\r\n  cartProducts: []\r\n};\r\n\r\n\r\nconst cartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      let item = action.payload;\r\n\r\n      item.quantity = 1;\r\n\r\n      return {\r\n        ...state,\r\n        cartProducts: state.cartProducts.concat(item)\r\n      };\r\n    \r\n    case REMOVE_FROM_CART:\r\n      return {\r\n        ...state,\r\n        cartProducts: state.cartProducts.filter(product => product.productID !== action.payload)\r\n      };\r\n    \r\n    case UPDATE_QUANTITY:\r\n      const { quantity, productID } = action.payload;\r\n      const productIndex = state.cartProducts.findIndex(cartProduct => cartProduct.productID === productID);\r\n      \r\n      let newQuantity = state.cartProducts[productIndex].quantity;\r\n\r\n      if (newQuantity > 0) {\r\n        newQuantity += quantity;\r\n        \r\n        if (newQuantity === 0) {\r\n          newQuantity = 1;\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        cartProducts: [\r\n          ...state.cartProducts.slice(0, productIndex),\r\n          {\r\n            ...state.cartProducts[productIndex],\r\n            quantity: newQuantity\r\n          },\r\n          ...state.cartProducts.slice(productIndex + 1)\r\n        ]\r\n      };\r\n    \r\n    case CLEAR_CART:\r\n      return {\r\n        ...state,\r\n        cartProducts: []\r\n      };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default cartReducer;\r\n\r\n","import {LOGIN_SUCCESS, LOGIN_FAILED, SIGNUP_FAILED, LOGOUT} from \"../actions/types/authActionTypes\";\r\n\r\nconst initialState = {\r\n\tisUserAuthenticated: false,\r\n\tuserToken: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase LOGIN_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisUserAuthenticated: true,\r\n\t\t\t\tuserToken: action.payload\r\n\t\t\t};\r\n\r\n\t\tcase LOGIN_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisUserAuthenticated: false,\r\n\t\t\t\tuserToken: null\r\n\t\t\t};\r\n\r\n\t\tcase SIGNUP_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisUserAuthenticated: false,\r\n\t\t\t\tuserToken: null\r\n\t\t\t};\r\n\r\n\t\tcase LOGOUT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisUserAuthenticated: false,\r\n\t\t\t\tuserToken: null\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n\r\nexport default authReducer;","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport productsReducer from './reducers/productsReducer';\r\nimport uiReducer from './reducers/uiReducer';\r\nimport cartReducer from './reducers/cartReducer';\r\nimport authReducer from \"./reducers/authReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  products: productsReducer,\r\n  ui: uiReducer,\r\n  cart: cartReducer,\r\n  auth: authReducer\r\n});\r\n\r\nconst initialState = {};\r\n\r\nlet middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(\r\n    applyMiddleware(...middleware)\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\n\nimport store from './store/store';\nimport { verifyLogin } from \"./store/actions/authActions\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nstore.dispatch(verifyLogin());\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,  \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}